
Atmega162.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  0000047e  00000512  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000047e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800112  00800112  00000524  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000524  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000554  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000590  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000874  00000000  00000000  000005e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000757  00000000  00000000  00000e5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003b3  00000000  00000000  000015b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000078  00000000  00000000  00001968  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003eb  00000000  00000000  000019e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000026  00000000  00000000  00001dcb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  00001df1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ee e7       	ldi	r30, 0x7E	; 126
  84:	f4 e0       	ldi	r31, 0x04	; 4
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a2 31       	cpi	r26, 0x12	; 18
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a2 e1       	ldi	r26, 0x12	; 18
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	ac 31       	cpi	r26, 0x1C	; 28
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 3d 02 	jmp	0x47a	; 0x47a <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:
#include <util/delay.h>
#include "UART/uart.h"

int main(void)
{
    USART_Init(MYUBRR); //Initializing UART
  ae:	8f e1       	ldi	r24, 0x1F	; 31
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	0e 94 71 00 	call	0xe2	; 0xe2 <USART_Init>
	while (1) 
    {
		//myChar = USART_Receive();
		//USART_Transmit(myChar+1);

		printf("Hello world\n");
  b6:	86 e0       	ldi	r24, 0x06	; 6
  b8:	91 e0       	ldi	r25, 0x01	; 1
  ba:	0e 94 c9 00 	call	0x192	; 0x192 <puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  be:	2f e9       	ldi	r18, 0x9F	; 159
  c0:	86 e8       	ldi	r24, 0x86	; 134
  c2:	91 e0       	ldi	r25, 0x01	; 1
  c4:	21 50       	subi	r18, 0x01	; 1
  c6:	80 40       	sbci	r24, 0x00	; 0
  c8:	90 40       	sbci	r25, 0x00	; 0
  ca:	e1 f7       	brne	.-8      	; 0xc4 <main+0x16>
  cc:	00 c0       	rjmp	.+0      	; 0xce <main+0x20>
  ce:	00 00       	nop
  d0:	f2 cf       	rjmp	.-28     	; 0xb6 <main+0x8>

000000d2 <USART_Transmit>:
}

void USART_Transmit(unsigned char data)
{
    /* Wait for empty transmit buffer */
    while (!(UCSR0A & (1 << UDRE0)))
  d2:	5d 9b       	sbis	0x0b, 5	; 11
  d4:	fe cf       	rjmp	.-4      	; 0xd2 <USART_Transmit>
        ;
    /* Put data into buffer, sends the data */
    UDR0 = data;
  d6:	8c b9       	out	0x0c, r24	; 12
  d8:	08 95       	ret

000000da <USART_Receive>:
}

unsigned char USART_Receive(void)
{
    /* Wait for data to be received */
    while (!(UCSR0A & (1 << RXC0)))
  da:	5f 9b       	sbis	0x0b, 7	; 11
  dc:	fe cf       	rjmp	.-4      	; 0xda <USART_Receive>
        ;
    /* Get and return received data from buffer */
    return UDR0;
  de:	8c b1       	in	r24, 0x0c	; 12
}
  e0:	08 95       	ret

000000e2 <USART_Init>:
#include "uart.h"

void USART_Init(unsigned int ubrr)
{
    /* Set baud rate */
    UBRR0H = (unsigned char)(ubrr >> 8);
  e2:	90 bd       	out	0x20, r25	; 32
    UBRR0L = (unsigned char)ubrr;
  e4:	89 b9       	out	0x09, r24	; 9
    /* Enable receiver and transmitter */
    UCSR0B = (1 << RXEN0) | (1 << TXEN0);
  e6:	88 e1       	ldi	r24, 0x18	; 24
  e8:	8a b9       	out	0x0a, r24	; 10
    /* Set frame format: 8data, 2stop bit */
    UCSR0C = (1 << URSEL0) | (1 << USBS0) | (3 << UCSZ00);
  ea:	8e e8       	ldi	r24, 0x8E	; 142
  ec:	80 bd       	out	0x20, r24	; 32
	
	fdevopen(USART_Transmit, USART_Receive);
  ee:	6d e6       	ldi	r22, 0x6D	; 109
  f0:	70 e0       	ldi	r23, 0x00	; 0
  f2:	89 e6       	ldi	r24, 0x69	; 105
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	0e 94 7e 00 	call	0xfc	; 0xfc <fdevopen>
  fa:	08 95       	ret

000000fc <fdevopen>:
  fc:	0f 93       	push	r16
  fe:	1f 93       	push	r17
 100:	cf 93       	push	r28
 102:	df 93       	push	r29
 104:	00 97       	sbiw	r24, 0x00	; 0
 106:	31 f4       	brne	.+12     	; 0x114 <fdevopen+0x18>
 108:	61 15       	cp	r22, r1
 10a:	71 05       	cpc	r23, r1
 10c:	19 f4       	brne	.+6      	; 0x114 <fdevopen+0x18>
 10e:	80 e0       	ldi	r24, 0x00	; 0
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	3a c0       	rjmp	.+116    	; 0x188 <fdevopen+0x8c>
 114:	8b 01       	movw	r16, r22
 116:	ec 01       	movw	r28, r24
 118:	6e e0       	ldi	r22, 0x0E	; 14
 11a:	70 e0       	ldi	r23, 0x00	; 0
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <calloc>
 124:	fc 01       	movw	r30, r24
 126:	89 2b       	or	r24, r25
 128:	91 f3       	breq	.-28     	; 0x10e <fdevopen+0x12>
 12a:	80 e8       	ldi	r24, 0x80	; 128
 12c:	83 83       	std	Z+3, r24	; 0x03
 12e:	01 15       	cp	r16, r1
 130:	11 05       	cpc	r17, r1
 132:	71 f0       	breq	.+28     	; 0x150 <fdevopen+0x54>
 134:	13 87       	std	Z+11, r17	; 0x0b
 136:	02 87       	std	Z+10, r16	; 0x0a
 138:	81 e8       	ldi	r24, 0x81	; 129
 13a:	83 83       	std	Z+3, r24	; 0x03
 13c:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__data_end>
 140:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <__data_end+0x1>
 144:	89 2b       	or	r24, r25
 146:	21 f4       	brne	.+8      	; 0x150 <fdevopen+0x54>
 148:	f0 93 13 01 	sts	0x0113, r31	; 0x800113 <__data_end+0x1>
 14c:	e0 93 12 01 	sts	0x0112, r30	; 0x800112 <__data_end>
 150:	20 97       	sbiw	r28, 0x00	; 0
 152:	c9 f0       	breq	.+50     	; 0x186 <fdevopen+0x8a>
 154:	d1 87       	std	Z+9, r29	; 0x09
 156:	c0 87       	std	Z+8, r28	; 0x08
 158:	83 81       	ldd	r24, Z+3	; 0x03
 15a:	82 60       	ori	r24, 0x02	; 2
 15c:	83 83       	std	Z+3, r24	; 0x03
 15e:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end+0x2>
 162:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x3>
 166:	89 2b       	or	r24, r25
 168:	71 f4       	brne	.+28     	; 0x186 <fdevopen+0x8a>
 16a:	f0 93 15 01 	sts	0x0115, r31	; 0x800115 <__data_end+0x3>
 16e:	e0 93 14 01 	sts	0x0114, r30	; 0x800114 <__data_end+0x2>
 172:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end+0x4>
 176:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__data_end+0x5>
 17a:	89 2b       	or	r24, r25
 17c:	21 f4       	brne	.+8      	; 0x186 <fdevopen+0x8a>
 17e:	f0 93 17 01 	sts	0x0117, r31	; 0x800117 <__data_end+0x5>
 182:	e0 93 16 01 	sts	0x0116, r30	; 0x800116 <__data_end+0x4>
 186:	cf 01       	movw	r24, r30
 188:	df 91       	pop	r29
 18a:	cf 91       	pop	r28
 18c:	1f 91       	pop	r17
 18e:	0f 91       	pop	r16
 190:	08 95       	ret

00000192 <puts>:
 192:	0f 93       	push	r16
 194:	1f 93       	push	r17
 196:	cf 93       	push	r28
 198:	df 93       	push	r29
 19a:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <__data_end+0x2>
 19e:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <__data_end+0x3>
 1a2:	23 81       	ldd	r18, Z+3	; 0x03
 1a4:	21 ff       	sbrs	r18, 1
 1a6:	1b c0       	rjmp	.+54     	; 0x1de <puts+0x4c>
 1a8:	8c 01       	movw	r16, r24
 1aa:	d0 e0       	ldi	r29, 0x00	; 0
 1ac:	c0 e0       	ldi	r28, 0x00	; 0
 1ae:	f8 01       	movw	r30, r16
 1b0:	81 91       	ld	r24, Z+
 1b2:	8f 01       	movw	r16, r30
 1b4:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <__data_end+0x2>
 1b8:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <__data_end+0x3>
 1bc:	db 01       	movw	r26, r22
 1be:	18 96       	adiw	r26, 0x08	; 8
 1c0:	ed 91       	ld	r30, X+
 1c2:	fc 91       	ld	r31, X
 1c4:	19 97       	sbiw	r26, 0x09	; 9
 1c6:	88 23       	and	r24, r24
 1c8:	31 f0       	breq	.+12     	; 0x1d6 <puts+0x44>
 1ca:	09 95       	icall
 1cc:	89 2b       	or	r24, r25
 1ce:	79 f3       	breq	.-34     	; 0x1ae <puts+0x1c>
 1d0:	df ef       	ldi	r29, 0xFF	; 255
 1d2:	cf ef       	ldi	r28, 0xFF	; 255
 1d4:	ec cf       	rjmp	.-40     	; 0x1ae <puts+0x1c>
 1d6:	8a e0       	ldi	r24, 0x0A	; 10
 1d8:	09 95       	icall
 1da:	89 2b       	or	r24, r25
 1dc:	19 f0       	breq	.+6      	; 0x1e4 <puts+0x52>
 1de:	8f ef       	ldi	r24, 0xFF	; 255
 1e0:	9f ef       	ldi	r25, 0xFF	; 255
 1e2:	02 c0       	rjmp	.+4      	; 0x1e8 <puts+0x56>
 1e4:	8d 2f       	mov	r24, r29
 1e6:	9c 2f       	mov	r25, r28
 1e8:	df 91       	pop	r29
 1ea:	cf 91       	pop	r28
 1ec:	1f 91       	pop	r17
 1ee:	0f 91       	pop	r16
 1f0:	08 95       	ret

000001f2 <calloc>:
 1f2:	0f 93       	push	r16
 1f4:	1f 93       	push	r17
 1f6:	cf 93       	push	r28
 1f8:	df 93       	push	r29
 1fa:	86 9f       	mul	r24, r22
 1fc:	80 01       	movw	r16, r0
 1fe:	87 9f       	mul	r24, r23
 200:	10 0d       	add	r17, r0
 202:	96 9f       	mul	r25, r22
 204:	10 0d       	add	r17, r0
 206:	11 24       	eor	r1, r1
 208:	c8 01       	movw	r24, r16
 20a:	0e 94 15 01 	call	0x22a	; 0x22a <malloc>
 20e:	ec 01       	movw	r28, r24
 210:	00 97       	sbiw	r24, 0x00	; 0
 212:	29 f0       	breq	.+10     	; 0x21e <__EEPROM_REGION_LENGTH__+0x1e>
 214:	a8 01       	movw	r20, r16
 216:	60 e0       	ldi	r22, 0x00	; 0
 218:	70 e0       	ldi	r23, 0x00	; 0
 21a:	0e 94 36 02 	call	0x46c	; 0x46c <memset>
 21e:	ce 01       	movw	r24, r28
 220:	df 91       	pop	r29
 222:	cf 91       	pop	r28
 224:	1f 91       	pop	r17
 226:	0f 91       	pop	r16
 228:	08 95       	ret

0000022a <malloc>:
 22a:	0f 93       	push	r16
 22c:	1f 93       	push	r17
 22e:	cf 93       	push	r28
 230:	df 93       	push	r29
 232:	82 30       	cpi	r24, 0x02	; 2
 234:	91 05       	cpc	r25, r1
 236:	10 f4       	brcc	.+4      	; 0x23c <malloc+0x12>
 238:	82 e0       	ldi	r24, 0x02	; 2
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <__flp>
 240:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <__flp+0x1>
 244:	20 e0       	ldi	r18, 0x00	; 0
 246:	30 e0       	ldi	r19, 0x00	; 0
 248:	a0 e0       	ldi	r26, 0x00	; 0
 24a:	b0 e0       	ldi	r27, 0x00	; 0
 24c:	30 97       	sbiw	r30, 0x00	; 0
 24e:	19 f1       	breq	.+70     	; 0x296 <malloc+0x6c>
 250:	40 81       	ld	r20, Z
 252:	51 81       	ldd	r21, Z+1	; 0x01
 254:	02 81       	ldd	r16, Z+2	; 0x02
 256:	13 81       	ldd	r17, Z+3	; 0x03
 258:	48 17       	cp	r20, r24
 25a:	59 07       	cpc	r21, r25
 25c:	c8 f0       	brcs	.+50     	; 0x290 <malloc+0x66>
 25e:	84 17       	cp	r24, r20
 260:	95 07       	cpc	r25, r21
 262:	69 f4       	brne	.+26     	; 0x27e <malloc+0x54>
 264:	10 97       	sbiw	r26, 0x00	; 0
 266:	31 f0       	breq	.+12     	; 0x274 <malloc+0x4a>
 268:	12 96       	adiw	r26, 0x02	; 2
 26a:	0c 93       	st	X, r16
 26c:	12 97       	sbiw	r26, 0x02	; 2
 26e:	13 96       	adiw	r26, 0x03	; 3
 270:	1c 93       	st	X, r17
 272:	27 c0       	rjmp	.+78     	; 0x2c2 <malloc+0x98>
 274:	00 93 1a 01 	sts	0x011A, r16	; 0x80011a <__flp>
 278:	10 93 1b 01 	sts	0x011B, r17	; 0x80011b <__flp+0x1>
 27c:	22 c0       	rjmp	.+68     	; 0x2c2 <malloc+0x98>
 27e:	21 15       	cp	r18, r1
 280:	31 05       	cpc	r19, r1
 282:	19 f0       	breq	.+6      	; 0x28a <malloc+0x60>
 284:	42 17       	cp	r20, r18
 286:	53 07       	cpc	r21, r19
 288:	18 f4       	brcc	.+6      	; 0x290 <malloc+0x66>
 28a:	9a 01       	movw	r18, r20
 28c:	bd 01       	movw	r22, r26
 28e:	ef 01       	movw	r28, r30
 290:	df 01       	movw	r26, r30
 292:	f8 01       	movw	r30, r16
 294:	db cf       	rjmp	.-74     	; 0x24c <malloc+0x22>
 296:	21 15       	cp	r18, r1
 298:	31 05       	cpc	r19, r1
 29a:	f9 f0       	breq	.+62     	; 0x2da <malloc+0xb0>
 29c:	28 1b       	sub	r18, r24
 29e:	39 0b       	sbc	r19, r25
 2a0:	24 30       	cpi	r18, 0x04	; 4
 2a2:	31 05       	cpc	r19, r1
 2a4:	80 f4       	brcc	.+32     	; 0x2c6 <malloc+0x9c>
 2a6:	8a 81       	ldd	r24, Y+2	; 0x02
 2a8:	9b 81       	ldd	r25, Y+3	; 0x03
 2aa:	61 15       	cp	r22, r1
 2ac:	71 05       	cpc	r23, r1
 2ae:	21 f0       	breq	.+8      	; 0x2b8 <malloc+0x8e>
 2b0:	fb 01       	movw	r30, r22
 2b2:	93 83       	std	Z+3, r25	; 0x03
 2b4:	82 83       	std	Z+2, r24	; 0x02
 2b6:	04 c0       	rjmp	.+8      	; 0x2c0 <malloc+0x96>
 2b8:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__flp+0x1>
 2bc:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__flp>
 2c0:	fe 01       	movw	r30, r28
 2c2:	32 96       	adiw	r30, 0x02	; 2
 2c4:	44 c0       	rjmp	.+136    	; 0x34e <malloc+0x124>
 2c6:	fe 01       	movw	r30, r28
 2c8:	e2 0f       	add	r30, r18
 2ca:	f3 1f       	adc	r31, r19
 2cc:	81 93       	st	Z+, r24
 2ce:	91 93       	st	Z+, r25
 2d0:	22 50       	subi	r18, 0x02	; 2
 2d2:	31 09       	sbc	r19, r1
 2d4:	39 83       	std	Y+1, r19	; 0x01
 2d6:	28 83       	st	Y, r18
 2d8:	3a c0       	rjmp	.+116    	; 0x34e <malloc+0x124>
 2da:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <__brkval>
 2de:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <__brkval+0x1>
 2e2:	23 2b       	or	r18, r19
 2e4:	41 f4       	brne	.+16     	; 0x2f6 <malloc+0xcc>
 2e6:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 2ea:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 2ee:	30 93 19 01 	sts	0x0119, r19	; 0x800119 <__brkval+0x1>
 2f2:	20 93 18 01 	sts	0x0118, r18	; 0x800118 <__brkval>
 2f6:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 2fa:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2fe:	21 15       	cp	r18, r1
 300:	31 05       	cpc	r19, r1
 302:	41 f4       	brne	.+16     	; 0x314 <malloc+0xea>
 304:	2d b7       	in	r18, 0x3d	; 61
 306:	3e b7       	in	r19, 0x3e	; 62
 308:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 30c:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 310:	24 1b       	sub	r18, r20
 312:	35 0b       	sbc	r19, r21
 314:	e0 91 18 01 	lds	r30, 0x0118	; 0x800118 <__brkval>
 318:	f0 91 19 01 	lds	r31, 0x0119	; 0x800119 <__brkval+0x1>
 31c:	e2 17       	cp	r30, r18
 31e:	f3 07       	cpc	r31, r19
 320:	a0 f4       	brcc	.+40     	; 0x34a <malloc+0x120>
 322:	2e 1b       	sub	r18, r30
 324:	3f 0b       	sbc	r19, r31
 326:	28 17       	cp	r18, r24
 328:	39 07       	cpc	r19, r25
 32a:	78 f0       	brcs	.+30     	; 0x34a <malloc+0x120>
 32c:	ac 01       	movw	r20, r24
 32e:	4e 5f       	subi	r20, 0xFE	; 254
 330:	5f 4f       	sbci	r21, 0xFF	; 255
 332:	24 17       	cp	r18, r20
 334:	35 07       	cpc	r19, r21
 336:	48 f0       	brcs	.+18     	; 0x34a <malloc+0x120>
 338:	4e 0f       	add	r20, r30
 33a:	5f 1f       	adc	r21, r31
 33c:	50 93 19 01 	sts	0x0119, r21	; 0x800119 <__brkval+0x1>
 340:	40 93 18 01 	sts	0x0118, r20	; 0x800118 <__brkval>
 344:	81 93       	st	Z+, r24
 346:	91 93       	st	Z+, r25
 348:	02 c0       	rjmp	.+4      	; 0x34e <malloc+0x124>
 34a:	e0 e0       	ldi	r30, 0x00	; 0
 34c:	f0 e0       	ldi	r31, 0x00	; 0
 34e:	cf 01       	movw	r24, r30
 350:	df 91       	pop	r29
 352:	cf 91       	pop	r28
 354:	1f 91       	pop	r17
 356:	0f 91       	pop	r16
 358:	08 95       	ret

0000035a <free>:
 35a:	cf 93       	push	r28
 35c:	df 93       	push	r29
 35e:	00 97       	sbiw	r24, 0x00	; 0
 360:	09 f4       	brne	.+2      	; 0x364 <free+0xa>
 362:	81 c0       	rjmp	.+258    	; 0x466 <__DATA_REGION_LENGTH__+0x66>
 364:	fc 01       	movw	r30, r24
 366:	32 97       	sbiw	r30, 0x02	; 2
 368:	13 82       	std	Z+3, r1	; 0x03
 36a:	12 82       	std	Z+2, r1	; 0x02
 36c:	a0 91 1a 01 	lds	r26, 0x011A	; 0x80011a <__flp>
 370:	b0 91 1b 01 	lds	r27, 0x011B	; 0x80011b <__flp+0x1>
 374:	10 97       	sbiw	r26, 0x00	; 0
 376:	81 f4       	brne	.+32     	; 0x398 <free+0x3e>
 378:	20 81       	ld	r18, Z
 37a:	31 81       	ldd	r19, Z+1	; 0x01
 37c:	82 0f       	add	r24, r18
 37e:	93 1f       	adc	r25, r19
 380:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <__brkval>
 384:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <__brkval+0x1>
 388:	28 17       	cp	r18, r24
 38a:	39 07       	cpc	r19, r25
 38c:	51 f5       	brne	.+84     	; 0x3e2 <free+0x88>
 38e:	f0 93 19 01 	sts	0x0119, r31	; 0x800119 <__brkval+0x1>
 392:	e0 93 18 01 	sts	0x0118, r30	; 0x800118 <__brkval>
 396:	67 c0       	rjmp	.+206    	; 0x466 <__DATA_REGION_LENGTH__+0x66>
 398:	ed 01       	movw	r28, r26
 39a:	20 e0       	ldi	r18, 0x00	; 0
 39c:	30 e0       	ldi	r19, 0x00	; 0
 39e:	ce 17       	cp	r28, r30
 3a0:	df 07       	cpc	r29, r31
 3a2:	40 f4       	brcc	.+16     	; 0x3b4 <free+0x5a>
 3a4:	4a 81       	ldd	r20, Y+2	; 0x02
 3a6:	5b 81       	ldd	r21, Y+3	; 0x03
 3a8:	9e 01       	movw	r18, r28
 3aa:	41 15       	cp	r20, r1
 3ac:	51 05       	cpc	r21, r1
 3ae:	f1 f0       	breq	.+60     	; 0x3ec <free+0x92>
 3b0:	ea 01       	movw	r28, r20
 3b2:	f5 cf       	rjmp	.-22     	; 0x39e <free+0x44>
 3b4:	d3 83       	std	Z+3, r29	; 0x03
 3b6:	c2 83       	std	Z+2, r28	; 0x02
 3b8:	40 81       	ld	r20, Z
 3ba:	51 81       	ldd	r21, Z+1	; 0x01
 3bc:	84 0f       	add	r24, r20
 3be:	95 1f       	adc	r25, r21
 3c0:	c8 17       	cp	r28, r24
 3c2:	d9 07       	cpc	r29, r25
 3c4:	59 f4       	brne	.+22     	; 0x3dc <free+0x82>
 3c6:	88 81       	ld	r24, Y
 3c8:	99 81       	ldd	r25, Y+1	; 0x01
 3ca:	84 0f       	add	r24, r20
 3cc:	95 1f       	adc	r25, r21
 3ce:	02 96       	adiw	r24, 0x02	; 2
 3d0:	91 83       	std	Z+1, r25	; 0x01
 3d2:	80 83       	st	Z, r24
 3d4:	8a 81       	ldd	r24, Y+2	; 0x02
 3d6:	9b 81       	ldd	r25, Y+3	; 0x03
 3d8:	93 83       	std	Z+3, r25	; 0x03
 3da:	82 83       	std	Z+2, r24	; 0x02
 3dc:	21 15       	cp	r18, r1
 3de:	31 05       	cpc	r19, r1
 3e0:	29 f4       	brne	.+10     	; 0x3ec <free+0x92>
 3e2:	f0 93 1b 01 	sts	0x011B, r31	; 0x80011b <__flp+0x1>
 3e6:	e0 93 1a 01 	sts	0x011A, r30	; 0x80011a <__flp>
 3ea:	3d c0       	rjmp	.+122    	; 0x466 <__DATA_REGION_LENGTH__+0x66>
 3ec:	e9 01       	movw	r28, r18
 3ee:	fb 83       	std	Y+3, r31	; 0x03
 3f0:	ea 83       	std	Y+2, r30	; 0x02
 3f2:	49 91       	ld	r20, Y+
 3f4:	59 91       	ld	r21, Y+
 3f6:	c4 0f       	add	r28, r20
 3f8:	d5 1f       	adc	r29, r21
 3fa:	ec 17       	cp	r30, r28
 3fc:	fd 07       	cpc	r31, r29
 3fe:	61 f4       	brne	.+24     	; 0x418 <__DATA_REGION_LENGTH__+0x18>
 400:	80 81       	ld	r24, Z
 402:	91 81       	ldd	r25, Z+1	; 0x01
 404:	84 0f       	add	r24, r20
 406:	95 1f       	adc	r25, r21
 408:	02 96       	adiw	r24, 0x02	; 2
 40a:	e9 01       	movw	r28, r18
 40c:	99 83       	std	Y+1, r25	; 0x01
 40e:	88 83       	st	Y, r24
 410:	82 81       	ldd	r24, Z+2	; 0x02
 412:	93 81       	ldd	r25, Z+3	; 0x03
 414:	9b 83       	std	Y+3, r25	; 0x03
 416:	8a 83       	std	Y+2, r24	; 0x02
 418:	e0 e0       	ldi	r30, 0x00	; 0
 41a:	f0 e0       	ldi	r31, 0x00	; 0
 41c:	12 96       	adiw	r26, 0x02	; 2
 41e:	8d 91       	ld	r24, X+
 420:	9c 91       	ld	r25, X
 422:	13 97       	sbiw	r26, 0x03	; 3
 424:	00 97       	sbiw	r24, 0x00	; 0
 426:	19 f0       	breq	.+6      	; 0x42e <__DATA_REGION_LENGTH__+0x2e>
 428:	fd 01       	movw	r30, r26
 42a:	dc 01       	movw	r26, r24
 42c:	f7 cf       	rjmp	.-18     	; 0x41c <__DATA_REGION_LENGTH__+0x1c>
 42e:	8d 91       	ld	r24, X+
 430:	9c 91       	ld	r25, X
 432:	11 97       	sbiw	r26, 0x01	; 1
 434:	9d 01       	movw	r18, r26
 436:	2e 5f       	subi	r18, 0xFE	; 254
 438:	3f 4f       	sbci	r19, 0xFF	; 255
 43a:	82 0f       	add	r24, r18
 43c:	93 1f       	adc	r25, r19
 43e:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <__brkval>
 442:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <__brkval+0x1>
 446:	28 17       	cp	r18, r24
 448:	39 07       	cpc	r19, r25
 44a:	69 f4       	brne	.+26     	; 0x466 <__DATA_REGION_LENGTH__+0x66>
 44c:	30 97       	sbiw	r30, 0x00	; 0
 44e:	29 f4       	brne	.+10     	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
 450:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <__flp+0x1>
 454:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <__flp>
 458:	02 c0       	rjmp	.+4      	; 0x45e <__DATA_REGION_LENGTH__+0x5e>
 45a:	13 82       	std	Z+3, r1	; 0x03
 45c:	12 82       	std	Z+2, r1	; 0x02
 45e:	b0 93 19 01 	sts	0x0119, r27	; 0x800119 <__brkval+0x1>
 462:	a0 93 18 01 	sts	0x0118, r26	; 0x800118 <__brkval>
 466:	df 91       	pop	r29
 468:	cf 91       	pop	r28
 46a:	08 95       	ret

0000046c <memset>:
 46c:	dc 01       	movw	r26, r24
 46e:	01 c0       	rjmp	.+2      	; 0x472 <memset+0x6>
 470:	6d 93       	st	X+, r22
 472:	41 50       	subi	r20, 0x01	; 1
 474:	50 40       	sbci	r21, 0x00	; 0
 476:	e0 f7       	brcc	.-8      	; 0x470 <memset+0x4>
 478:	08 95       	ret

0000047a <_exit>:
 47a:	f8 94       	cli

0000047c <__stop_program>:
 47c:	ff cf       	rjmp	.-2      	; 0x47c <__stop_program>
