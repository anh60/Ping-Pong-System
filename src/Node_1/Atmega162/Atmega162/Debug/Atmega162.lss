
Atmega162.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000056  00800100  00001108  0000119c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001108  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800156  00800156  000011f2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000011f2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001250  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  0000128c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ea4  00000000  00000000  0000138c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b00  00000000  00000000  00002230  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000938  00000000  00000000  00002d30  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000023c  00000000  00000000  00003668  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000052c  00000000  00000000  000038a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000540  00000000  00000000  00003dd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00004310  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
       4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
       8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
       c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
      70:	11 24       	eor	r1, r1
      72:	1f be       	out	0x3f, r1	; 63
      74:	cf ef       	ldi	r28, 0xFF	; 255
      76:	d4 e0       	ldi	r29, 0x04	; 4
      78:	de bf       	out	0x3e, r29	; 62
      7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
      7c:	11 e0       	ldi	r17, 0x01	; 1
      7e:	a0 e0       	ldi	r26, 0x00	; 0
      80:	b1 e0       	ldi	r27, 0x01	; 1
      82:	e8 e0       	ldi	r30, 0x08	; 8
      84:	f1 e1       	ldi	r31, 0x11	; 17
      86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
      88:	05 90       	lpm	r0, Z+
      8a:	0d 92       	st	X+, r0
      8c:	a6 35       	cpi	r26, 0x56	; 86
      8e:	b1 07       	cpc	r27, r17
      90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
      92:	21 e0       	ldi	r18, 0x01	; 1
      94:	a6 e5       	ldi	r26, 0x56	; 86
      96:	b1 e0       	ldi	r27, 0x01	; 1
      98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
      9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
      9c:	a0 36       	cpi	r26, 0x60	; 96
      9e:	b2 07       	cpc	r27, r18
      a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
      a2:	0e 94 06 02 	call	0x40c	; 0x40c <main>
      a6:	0c 94 82 08 	jmp	0x1104	; 0x1104 <_exit>

000000aa <__bad_interrupt>:
      aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <adc_init>:
#include <util/delay.h>

#define BASE_ADDRESS_ADC 0x1400;

void adc_init (void){
	MCUCR |= (1 << SRE );  // enable XMEM
      ae:	85 b7       	in	r24, 0x35	; 53
      b0:	80 68       	ori	r24, 0x80	; 128
      b2:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1 << XMM2 ); // mask unused bits (PC7-PC4 used for JTAG)	
      b4:	80 b7       	in	r24, 0x30	; 48
      b6:	80 62       	ori	r24, 0x20	; 32
      b8:	80 bf       	out	0x30, r24	; 48
      ba:	08 95       	ret

000000bc <adc_read>:
}

uint8_t adc_read(uint8_t channel){
      bc:	cf 93       	push	r28
      be:	df 93       	push	r29
      c0:	00 d0       	rcall	.+0      	; 0xc2 <adc_read+0x6>
      c2:	00 d0       	rcall	.+0      	; 0xc4 <adc_read+0x8>
      c4:	cd b7       	in	r28, 0x3d	; 61
      c6:	de b7       	in	r29, 0x3e	; 62
		if (channel > 3 && channel < 0) {
			printf("ERROR: Channel must be between 0 and 3");
			return 0;
		}
		volatile char *ext_mem_adc = (char *) BASE_ADDRESS_ADC;
		ext_mem_adc[0x0000]= 0x00;	//Write dummy data to trigger WR signal
      c8:	e0 e0       	ldi	r30, 0x00	; 0
      ca:	f4 e1       	ldi	r31, 0x14	; 20
      cc:	10 82       	st	Z, r1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      ce:	95 e0       	ldi	r25, 0x05	; 5
      d0:	9a 95       	dec	r25
      d2:	f1 f7       	brne	.-4      	; 0xd0 <adc_read+0x14>
		_delay_us(15);				//Delay to match timing graph
		volatile uint8_t ret_val[4];
		ret_val[0] = ext_mem_adc[0x0000];
      d4:	90 81       	ld	r25, Z
      d6:	99 83       	std	Y+1, r25	; 0x01
		ret_val[1] = ext_mem_adc[0x0000];
      d8:	90 81       	ld	r25, Z
      da:	9a 83       	std	Y+2, r25	; 0x02
		ret_val[2] = ext_mem_adc[0x0000];
      dc:	90 81       	ld	r25, Z
      de:	9b 83       	std	Y+3, r25	; 0x03
		ret_val[3] = ext_mem_adc[0x0000];
      e0:	90 81       	ld	r25, Z
      e2:	9c 83       	std	Y+4, r25	; 0x04
		return ret_val[channel];
      e4:	e1 e0       	ldi	r30, 0x01	; 1
      e6:	f0 e0       	ldi	r31, 0x00	; 0
      e8:	ec 0f       	add	r30, r28
      ea:	fd 1f       	adc	r31, r29
      ec:	e8 0f       	add	r30, r24
      ee:	f1 1d       	adc	r31, r1
      f0:	80 81       	ld	r24, Z
}
      f2:	0f 90       	pop	r0
      f4:	0f 90       	pop	r0
      f6:	0f 90       	pop	r0
      f8:	0f 90       	pop	r0
      fa:	df 91       	pop	r29
      fc:	cf 91       	pop	r28
      fe:	08 95       	ret

00000100 <get_slider>:
		if(Y>0)return UP;
		if(Y<0)return DOWN;
	}
}

static int16_t get_slider(uint8_t dir){
     100:	ff 92       	push	r15
     102:	0f 93       	push	r16
     104:	1f 93       	push	r17
     106:	cf 93       	push	r28
     108:	df 93       	push	r29
     10a:	00 d0       	rcall	.+0      	; 0x10c <get_slider+0xc>
     10c:	1f 92       	push	r1
     10e:	cd b7       	in	r28, 0x3d	; 61
     110:	de b7       	in	r29, 0x3e	; 62
     112:	f8 2e       	mov	r15, r24
	volatile uint8_t value;
	volatile uint16_t sum=0;
     114:	1b 82       	std	Y+3, r1	; 0x03
     116:	1a 82       	std	Y+2, r1	; 0x02
	for (int i=0; i<TH ;i++){
     118:	00 e0       	ldi	r16, 0x00	; 0
     11a:	10 e0       	ldi	r17, 0x00	; 0
     11c:	0c c0       	rjmp	.+24     	; 0x136 <get_slider+0x36>
		sum += adc_read(dir+2);
     11e:	82 e0       	ldi	r24, 0x02	; 2
     120:	8f 0d       	add	r24, r15
     122:	0e 94 5e 00 	call	0xbc	; 0xbc <adc_read>
     126:	2a 81       	ldd	r18, Y+2	; 0x02
     128:	3b 81       	ldd	r19, Y+3	; 0x03
     12a:	28 0f       	add	r18, r24
     12c:	31 1d       	adc	r19, r1
     12e:	3b 83       	std	Y+3, r19	; 0x03
     130:	2a 83       	std	Y+2, r18	; 0x02
}

static int16_t get_slider(uint8_t dir){
	volatile uint8_t value;
	volatile uint16_t sum=0;
	for (int i=0; i<TH ;i++){
     132:	0f 5f       	subi	r16, 0xFF	; 255
     134:	1f 4f       	sbci	r17, 0xFF	; 255
     136:	04 31       	cpi	r16, 0x14	; 20
     138:	11 05       	cpc	r17, r1
     13a:	8c f3       	brlt	.-30     	; 0x11e <get_slider+0x1e>
		sum += adc_read(dir+2);
	}
	value = sum /TH;
     13c:	2a 81       	ldd	r18, Y+2	; 0x02
     13e:	3b 81       	ldd	r19, Y+3	; 0x03
     140:	ad ec       	ldi	r26, 0xCD	; 205
     142:	bc ec       	ldi	r27, 0xCC	; 204
     144:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <__umulhisi3>
     148:	92 95       	swap	r25
     14a:	82 95       	swap	r24
     14c:	8f 70       	andi	r24, 0x0F	; 15
     14e:	89 27       	eor	r24, r25
     150:	9f 70       	andi	r25, 0x0F	; 15
     152:	89 27       	eor	r24, r25
     154:	89 83       	std	Y+1, r24	; 0x01
	
	return value*100/255;
     156:	89 81       	ldd	r24, Y+1	; 0x01
     158:	24 e6       	ldi	r18, 0x64	; 100
     15a:	82 9f       	mul	r24, r18
     15c:	c0 01       	movw	r24, r0
     15e:	11 24       	eor	r1, r1
     160:	6f ef       	ldi	r22, 0xFF	; 255
     162:	70 e0       	ldi	r23, 0x00	; 0
     164:	0e 94 de 03 	call	0x7bc	; 0x7bc <__divmodhi4>
     168:	cb 01       	movw	r24, r22
}
     16a:	0f 90       	pop	r0
     16c:	0f 90       	pop	r0
     16e:	0f 90       	pop	r0
     170:	df 91       	pop	r29
     172:	cf 91       	pop	r28
     174:	1f 91       	pop	r17
     176:	0f 91       	pop	r16
     178:	ff 90       	pop	r15
     17a:	08 95       	ret

0000017c <get_X_pos>:
#include "../ADC/adc.h"
#define  PI 3.1415

#define TH 20

int16_t get_X_pos(void){
     17c:	0f 93       	push	r16
     17e:	1f 93       	push	r17
     180:	cf 93       	push	r28
     182:	df 93       	push	r29
     184:	cd b7       	in	r28, 0x3d	; 61
     186:	de b7       	in	r29, 0x3e	; 62
     188:	27 97       	sbiw	r28, 0x07	; 7
     18a:	0f b6       	in	r0, 0x3f	; 63
     18c:	f8 94       	cli
     18e:	de bf       	out	0x3e, r29	; 62
     190:	0f be       	out	0x3f, r0	; 63
     192:	cd bf       	out	0x3d, r28	; 61
	volatile uint8_t X_positive;
	volatile uint16_t sum=0;
     194:	1b 82       	std	Y+3, r1	; 0x03
     196:	1a 82       	std	Y+2, r1	; 0x02
	for (int i=0; i<TH ;i++){
     198:	00 e0       	ldi	r16, 0x00	; 0
     19a:	10 e0       	ldi	r17, 0x00	; 0
     19c:	0b c0       	rjmp	.+22     	; 0x1b4 <get_X_pos+0x38>
		sum += adc_read(1);
     19e:	81 e0       	ldi	r24, 0x01	; 1
     1a0:	0e 94 5e 00 	call	0xbc	; 0xbc <adc_read>
     1a4:	2a 81       	ldd	r18, Y+2	; 0x02
     1a6:	3b 81       	ldd	r19, Y+3	; 0x03
     1a8:	28 0f       	add	r18, r24
     1aa:	31 1d       	adc	r19, r1
     1ac:	3b 83       	std	Y+3, r19	; 0x03
     1ae:	2a 83       	std	Y+2, r18	; 0x02
#define TH 20

int16_t get_X_pos(void){
	volatile uint8_t X_positive;
	volatile uint16_t sum=0;
	for (int i=0; i<TH ;i++){
     1b0:	0f 5f       	subi	r16, 0xFF	; 255
     1b2:	1f 4f       	sbci	r17, 0xFF	; 255
     1b4:	04 31       	cpi	r16, 0x14	; 20
     1b6:	11 05       	cpc	r17, r1
     1b8:	94 f3       	brlt	.-28     	; 0x19e <get_X_pos+0x22>
		sum += adc_read(1);
	}
	X_positive = sum /TH;
     1ba:	2a 81       	ldd	r18, Y+2	; 0x02
     1bc:	3b 81       	ldd	r19, Y+3	; 0x03
     1be:	ad ec       	ldi	r26, 0xCD	; 205
     1c0:	bc ec       	ldi	r27, 0xCC	; 204
     1c2:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <__umulhisi3>
     1c6:	92 95       	swap	r25
     1c8:	82 95       	swap	r24
     1ca:	8f 70       	andi	r24, 0x0F	; 15
     1cc:	89 27       	eor	r24, r25
     1ce:	9f 70       	andi	r25, 0x0F	; 15
     1d0:	89 27       	eor	r24, r25
     1d2:	89 83       	std	Y+1, r24	; 0x01
	volatile double X_pos = X_positive - 160;
     1d4:	69 81       	ldd	r22, Y+1	; 0x01
     1d6:	70 e0       	ldi	r23, 0x00	; 0
     1d8:	60 5a       	subi	r22, 0xA0	; 160
     1da:	71 09       	sbc	r23, r1
     1dc:	07 2e       	mov	r0, r23
     1de:	00 0c       	add	r0, r0
     1e0:	88 0b       	sbc	r24, r24
     1e2:	99 0b       	sbc	r25, r25
     1e4:	0e 94 bc 02 	call	0x578	; 0x578 <__floatsisf>
     1e8:	6c 83       	std	Y+4, r22	; 0x04
     1ea:	7d 83       	std	Y+5, r23	; 0x05
     1ec:	8e 83       	std	Y+6, r24	; 0x06
     1ee:	9f 83       	std	Y+7, r25	; 0x07
	
	if(X_pos < 10 && X_pos > -10) return 0;
     1f0:	6c 81       	ldd	r22, Y+4	; 0x04
     1f2:	7d 81       	ldd	r23, Y+5	; 0x05
     1f4:	8e 81       	ldd	r24, Y+6	; 0x06
     1f6:	9f 81       	ldd	r25, Y+7	; 0x07
     1f8:	20 e0       	ldi	r18, 0x00	; 0
     1fa:	30 e0       	ldi	r19, 0x00	; 0
     1fc:	40 e2       	ldi	r20, 0x20	; 32
     1fe:	51 e4       	ldi	r21, 0x41	; 65
     200:	0e 94 7f 02 	call	0x4fe	; 0x4fe <__cmpsf2>
     204:	88 23       	and	r24, r24
     206:	64 f4       	brge	.+24     	; 0x220 <__EEPROM_REGION_LENGTH__+0x20>
     208:	6c 81       	ldd	r22, Y+4	; 0x04
     20a:	7d 81       	ldd	r23, Y+5	; 0x05
     20c:	8e 81       	ldd	r24, Y+6	; 0x06
     20e:	9f 81       	ldd	r25, Y+7	; 0x07
     210:	20 e0       	ldi	r18, 0x00	; 0
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e2       	ldi	r20, 0x20	; 32
     216:	51 ec       	ldi	r21, 0xC1	; 193
     218:	0e 94 44 03 	call	0x688	; 0x688 <__gesf2>
     21c:	18 16       	cp	r1, r24
     21e:	3c f1       	brlt	.+78     	; 0x26e <__EEPROM_REGION_LENGTH__+0x6e>
	
	if(X_pos >=0) return X_pos*1.06;
     220:	6c 81       	ldd	r22, Y+4	; 0x04
     222:	7d 81       	ldd	r23, Y+5	; 0x05
     224:	8e 81       	ldd	r24, Y+6	; 0x06
     226:	9f 81       	ldd	r25, Y+7	; 0x07
     228:	20 e0       	ldi	r18, 0x00	; 0
     22a:	30 e0       	ldi	r19, 0x00	; 0
     22c:	a9 01       	movw	r20, r18
     22e:	0e 94 44 03 	call	0x688	; 0x688 <__gesf2>
     232:	88 23       	and	r24, r24
     234:	74 f0       	brlt	.+28     	; 0x252 <__EEPROM_REGION_LENGTH__+0x52>
     236:	6c 81       	ldd	r22, Y+4	; 0x04
     238:	7d 81       	ldd	r23, Y+5	; 0x05
     23a:	8e 81       	ldd	r24, Y+6	; 0x06
     23c:	9f 81       	ldd	r25, Y+7	; 0x07
     23e:	24 e1       	ldi	r18, 0x14	; 20
     240:	3e ea       	ldi	r19, 0xAE	; 174
     242:	47 e8       	ldi	r20, 0x87	; 135
     244:	5f e3       	ldi	r21, 0x3F	; 63
     246:	0e 94 49 03 	call	0x692	; 0x692 <__mulsf3>
     24a:	0e 94 84 02 	call	0x508	; 0x508 <__fixsfsi>
     24e:	cb 01       	movw	r24, r22
     250:	10 c0       	rjmp	.+32     	; 0x272 <__EEPROM_REGION_LENGTH__+0x72>
	else return X_pos*0.63;
     252:	6c 81       	ldd	r22, Y+4	; 0x04
     254:	7d 81       	ldd	r23, Y+5	; 0x05
     256:	8e 81       	ldd	r24, Y+6	; 0x06
     258:	9f 81       	ldd	r25, Y+7	; 0x07
     25a:	2e ea       	ldi	r18, 0xAE	; 174
     25c:	37 e4       	ldi	r19, 0x47	; 71
     25e:	41 e2       	ldi	r20, 0x21	; 33
     260:	5f e3       	ldi	r21, 0x3F	; 63
     262:	0e 94 49 03 	call	0x692	; 0x692 <__mulsf3>
     266:	0e 94 84 02 	call	0x508	; 0x508 <__fixsfsi>
     26a:	cb 01       	movw	r24, r22
     26c:	02 c0       	rjmp	.+4      	; 0x272 <__EEPROM_REGION_LENGTH__+0x72>
		sum += adc_read(1);
	}
	X_positive = sum /TH;
	volatile double X_pos = X_positive - 160;
	
	if(X_pos < 10 && X_pos > -10) return 0;
     26e:	80 e0       	ldi	r24, 0x00	; 0
     270:	90 e0       	ldi	r25, 0x00	; 0
	
	if(X_pos >=0) return X_pos*1.06;
	else return X_pos*0.63;
}
     272:	27 96       	adiw	r28, 0x07	; 7
     274:	0f b6       	in	r0, 0x3f	; 63
     276:	f8 94       	cli
     278:	de bf       	out	0x3e, r29	; 62
     27a:	0f be       	out	0x3f, r0	; 63
     27c:	cd bf       	out	0x3d, r28	; 61
     27e:	df 91       	pop	r29
     280:	cf 91       	pop	r28
     282:	1f 91       	pop	r17
     284:	0f 91       	pop	r16
     286:	08 95       	ret

00000288 <get_Y_pos>:

int16_t get_Y_pos(void){
     288:	0f 93       	push	r16
     28a:	1f 93       	push	r17
     28c:	cf 93       	push	r28
     28e:	df 93       	push	r29
     290:	cd b7       	in	r28, 0x3d	; 61
     292:	de b7       	in	r29, 0x3e	; 62
     294:	27 97       	sbiw	r28, 0x07	; 7
     296:	0f b6       	in	r0, 0x3f	; 63
     298:	f8 94       	cli
     29a:	de bf       	out	0x3e, r29	; 62
     29c:	0f be       	out	0x3f, r0	; 63
     29e:	cd bf       	out	0x3d, r28	; 61
	volatile uint8_t Y_positive;
	volatile uint16_t sum=0;
     2a0:	1b 82       	std	Y+3, r1	; 0x03
     2a2:	1a 82       	std	Y+2, r1	; 0x02
	for (int i=0; i<TH ;i++){
     2a4:	00 e0       	ldi	r16, 0x00	; 0
     2a6:	10 e0       	ldi	r17, 0x00	; 0
     2a8:	0b c0       	rjmp	.+22     	; 0x2c0 <get_Y_pos+0x38>
		sum += adc_read(0);
     2aa:	80 e0       	ldi	r24, 0x00	; 0
     2ac:	0e 94 5e 00 	call	0xbc	; 0xbc <adc_read>
     2b0:	2a 81       	ldd	r18, Y+2	; 0x02
     2b2:	3b 81       	ldd	r19, Y+3	; 0x03
     2b4:	28 0f       	add	r18, r24
     2b6:	31 1d       	adc	r19, r1
     2b8:	3b 83       	std	Y+3, r19	; 0x03
     2ba:	2a 83       	std	Y+2, r18	; 0x02
}

int16_t get_Y_pos(void){
	volatile uint8_t Y_positive;
	volatile uint16_t sum=0;
	for (int i=0; i<TH ;i++){
     2bc:	0f 5f       	subi	r16, 0xFF	; 255
     2be:	1f 4f       	sbci	r17, 0xFF	; 255
     2c0:	04 31       	cpi	r16, 0x14	; 20
     2c2:	11 05       	cpc	r17, r1
     2c4:	94 f3       	brlt	.-28     	; 0x2aa <get_Y_pos+0x22>
		sum += adc_read(0);
	}
	Y_positive = sum /TH;
     2c6:	2a 81       	ldd	r18, Y+2	; 0x02
     2c8:	3b 81       	ldd	r19, Y+3	; 0x03
     2ca:	ad ec       	ldi	r26, 0xCD	; 205
     2cc:	bc ec       	ldi	r27, 0xCC	; 204
     2ce:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <__umulhisi3>
     2d2:	92 95       	swap	r25
     2d4:	82 95       	swap	r24
     2d6:	8f 70       	andi	r24, 0x0F	; 15
     2d8:	89 27       	eor	r24, r25
     2da:	9f 70       	andi	r25, 0x0F	; 15
     2dc:	89 27       	eor	r24, r25
     2de:	89 83       	std	Y+1, r24	; 0x01
	volatile double Y_pos = Y_positive - 159;
     2e0:	69 81       	ldd	r22, Y+1	; 0x01
     2e2:	70 e0       	ldi	r23, 0x00	; 0
     2e4:	6f 59       	subi	r22, 0x9F	; 159
     2e6:	71 09       	sbc	r23, r1
     2e8:	07 2e       	mov	r0, r23
     2ea:	00 0c       	add	r0, r0
     2ec:	88 0b       	sbc	r24, r24
     2ee:	99 0b       	sbc	r25, r25
     2f0:	0e 94 bc 02 	call	0x578	; 0x578 <__floatsisf>
     2f4:	6c 83       	std	Y+4, r22	; 0x04
     2f6:	7d 83       	std	Y+5, r23	; 0x05
     2f8:	8e 83       	std	Y+6, r24	; 0x06
     2fa:	9f 83       	std	Y+7, r25	; 0x07
	
	if(Y_pos < 10 && Y_pos > -10) return 0;
     2fc:	6c 81       	ldd	r22, Y+4	; 0x04
     2fe:	7d 81       	ldd	r23, Y+5	; 0x05
     300:	8e 81       	ldd	r24, Y+6	; 0x06
     302:	9f 81       	ldd	r25, Y+7	; 0x07
     304:	20 e0       	ldi	r18, 0x00	; 0
     306:	30 e0       	ldi	r19, 0x00	; 0
     308:	40 e2       	ldi	r20, 0x20	; 32
     30a:	51 e4       	ldi	r21, 0x41	; 65
     30c:	0e 94 7f 02 	call	0x4fe	; 0x4fe <__cmpsf2>
     310:	88 23       	and	r24, r24
     312:	64 f4       	brge	.+24     	; 0x32c <get_Y_pos+0xa4>
     314:	6c 81       	ldd	r22, Y+4	; 0x04
     316:	7d 81       	ldd	r23, Y+5	; 0x05
     318:	8e 81       	ldd	r24, Y+6	; 0x06
     31a:	9f 81       	ldd	r25, Y+7	; 0x07
     31c:	20 e0       	ldi	r18, 0x00	; 0
     31e:	30 e0       	ldi	r19, 0x00	; 0
     320:	40 e2       	ldi	r20, 0x20	; 32
     322:	51 ec       	ldi	r21, 0xC1	; 193
     324:	0e 94 44 03 	call	0x688	; 0x688 <__gesf2>
     328:	18 16       	cp	r1, r24
     32a:	3c f1       	brlt	.+78     	; 0x37a <get_Y_pos+0xf2>
	
	if(Y_pos >=0) return Y_pos*1.05;
     32c:	6c 81       	ldd	r22, Y+4	; 0x04
     32e:	7d 81       	ldd	r23, Y+5	; 0x05
     330:	8e 81       	ldd	r24, Y+6	; 0x06
     332:	9f 81       	ldd	r25, Y+7	; 0x07
     334:	20 e0       	ldi	r18, 0x00	; 0
     336:	30 e0       	ldi	r19, 0x00	; 0
     338:	a9 01       	movw	r20, r18
     33a:	0e 94 44 03 	call	0x688	; 0x688 <__gesf2>
     33e:	88 23       	and	r24, r24
     340:	74 f0       	brlt	.+28     	; 0x35e <get_Y_pos+0xd6>
     342:	6c 81       	ldd	r22, Y+4	; 0x04
     344:	7d 81       	ldd	r23, Y+5	; 0x05
     346:	8e 81       	ldd	r24, Y+6	; 0x06
     348:	9f 81       	ldd	r25, Y+7	; 0x07
     34a:	26 e6       	ldi	r18, 0x66	; 102
     34c:	36 e6       	ldi	r19, 0x66	; 102
     34e:	46 e8       	ldi	r20, 0x86	; 134
     350:	5f e3       	ldi	r21, 0x3F	; 63
     352:	0e 94 49 03 	call	0x692	; 0x692 <__mulsf3>
     356:	0e 94 84 02 	call	0x508	; 0x508 <__fixsfsi>
     35a:	cb 01       	movw	r24, r22
     35c:	10 c0       	rjmp	.+32     	; 0x37e <get_Y_pos+0xf6>
	else return Y_pos*0.64;
     35e:	6c 81       	ldd	r22, Y+4	; 0x04
     360:	7d 81       	ldd	r23, Y+5	; 0x05
     362:	8e 81       	ldd	r24, Y+6	; 0x06
     364:	9f 81       	ldd	r25, Y+7	; 0x07
     366:	2a e0       	ldi	r18, 0x0A	; 10
     368:	37 ed       	ldi	r19, 0xD7	; 215
     36a:	43 e2       	ldi	r20, 0x23	; 35
     36c:	5f e3       	ldi	r21, 0x3F	; 63
     36e:	0e 94 49 03 	call	0x692	; 0x692 <__mulsf3>
     372:	0e 94 84 02 	call	0x508	; 0x508 <__fixsfsi>
     376:	cb 01       	movw	r24, r22
     378:	02 c0       	rjmp	.+4      	; 0x37e <get_Y_pos+0xf6>
		sum += adc_read(0);
	}
	Y_positive = sum /TH;
	volatile double Y_pos = Y_positive - 159;
	
	if(Y_pos < 10 && Y_pos > -10) return 0;
     37a:	80 e0       	ldi	r24, 0x00	; 0
     37c:	90 e0       	ldi	r25, 0x00	; 0
	
	if(Y_pos >=0) return Y_pos*1.05;
	else return Y_pos*0.64;
}
     37e:	27 96       	adiw	r28, 0x07	; 7
     380:	0f b6       	in	r0, 0x3f	; 63
     382:	f8 94       	cli
     384:	de bf       	out	0x3e, r29	; 62
     386:	0f be       	out	0x3f, r0	; 63
     388:	cd bf       	out	0x3d, r28	; 61
     38a:	df 91       	pop	r29
     38c:	cf 91       	pop	r28
     38e:	1f 91       	pop	r17
     390:	0f 91       	pop	r16
     392:	08 95       	ret

00000394 <get_dir>:

joystick_dir get_dir(void){
     394:	cf 93       	push	r28
     396:	df 93       	push	r29
	int16_t X = get_X_pos();
     398:	0e 94 be 00 	call	0x17c	; 0x17c <get_X_pos>
     39c:	ec 01       	movw	r28, r24
	int16_t Y = get_Y_pos();
     39e:	0e 94 44 01 	call	0x288	; 0x288 <get_Y_pos>
	if (X==0 && Y==0) return NEUTRAL;
     3a2:	20 97       	sbiw	r28, 0x00	; 0
     3a4:	11 f4       	brne	.+4      	; 0x3aa <get_dir+0x16>
     3a6:	00 97       	sbiw	r24, 0x00	; 0
     3a8:	e9 f0       	breq	.+58     	; 0x3e4 <get_dir+0x50>
	if (abs(X) > abs(Y)) {
     3aa:	9e 01       	movw	r18, r28
     3ac:	dd 23       	and	r29, r29
     3ae:	24 f4       	brge	.+8      	; 0x3b8 <get_dir+0x24>
     3b0:	22 27       	eor	r18, r18
     3b2:	33 27       	eor	r19, r19
     3b4:	2c 1b       	sub	r18, r28
     3b6:	3d 0b       	sbc	r19, r29
     3b8:	ac 01       	movw	r20, r24
     3ba:	99 23       	and	r25, r25
     3bc:	24 f4       	brge	.+8      	; 0x3c6 <get_dir+0x32>
     3be:	44 27       	eor	r20, r20
     3c0:	55 27       	eor	r21, r21
     3c2:	48 1b       	sub	r20, r24
     3c4:	59 0b       	sbc	r21, r25
     3c6:	42 17       	cp	r20, r18
     3c8:	53 07       	cpc	r21, r19
     3ca:	34 f4       	brge	.+12     	; 0x3d8 <get_dir+0x44>
		if(X>0)return RIGHT;
     3cc:	1c 16       	cp	r1, r28
     3ce:	1d 06       	cpc	r1, r29
     3d0:	5c f0       	brlt	.+22     	; 0x3e8 <get_dir+0x54>
		if(X<0)return LEFT; 
     3d2:	dd 23       	and	r29, r29
     3d4:	34 f4       	brge	.+12     	; 0x3e2 <get_dir+0x4e>
     3d6:	0a c0       	rjmp	.+20     	; 0x3ec <get_dir+0x58>
	}
	else{
		if(Y>0)return UP;
     3d8:	18 16       	cp	r1, r24
     3da:	19 06       	cpc	r1, r25
     3dc:	4c f0       	brlt	.+18     	; 0x3f0 <get_dir+0x5c>
		if(Y<0)return DOWN;
     3de:	99 23       	and	r25, r25
     3e0:	4c f0       	brlt	.+18     	; 0x3f4 <get_dir+0x60>
	}
}
     3e2:	09 c0       	rjmp	.+18     	; 0x3f6 <get_dir+0x62>
}

joystick_dir get_dir(void){
	int16_t X = get_X_pos();
	int16_t Y = get_Y_pos();
	if (X==0 && Y==0) return NEUTRAL;
     3e4:	84 e0       	ldi	r24, 0x04	; 4
     3e6:	07 c0       	rjmp	.+14     	; 0x3f6 <get_dir+0x62>
	if (abs(X) > abs(Y)) {
		if(X>0)return RIGHT;
     3e8:	81 e0       	ldi	r24, 0x01	; 1
     3ea:	05 c0       	rjmp	.+10     	; 0x3f6 <get_dir+0x62>
		if(X<0)return LEFT; 
     3ec:	80 e0       	ldi	r24, 0x00	; 0
     3ee:	03 c0       	rjmp	.+6      	; 0x3f6 <get_dir+0x62>
	}
	else{
		if(Y>0)return UP;
     3f0:	82 e0       	ldi	r24, 0x02	; 2
     3f2:	01 c0       	rjmp	.+2      	; 0x3f6 <get_dir+0x62>
		if(Y<0)return DOWN;
     3f4:	83 e0       	ldi	r24, 0x03	; 3
	}
}
     3f6:	df 91       	pop	r29
     3f8:	cf 91       	pop	r28
     3fa:	08 95       	ret

000003fc <get_slider_r>:
	
	return value*100/255;
}

int16_t get_slider_r(void){
	return get_slider(1);
     3fc:	81 e0       	ldi	r24, 0x01	; 1
     3fe:	0e 94 80 00 	call	0x100	; 0x100 <get_slider>
}
     402:	08 95       	ret

00000404 <get_slider_l>:

int16_t get_slider_l(void){
	return get_slider(0);
     404:	80 e0       	ldi	r24, 0x00	; 0
     406:	0e 94 80 00 	call	0x100	; 0x100 <get_slider>
     40a:	08 95       	ret

0000040c <main>:
#include "Joystick/joystick.h"
#include "Tests/sram_test_cr.h"

int main(void)
{
    USART_Init(MYUBRR); //Initializing UART
     40c:	8f e1       	ldi	r24, 0x1F	; 31
     40e:	90 e0       	ldi	r25, 0x00	; 0
     410:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <USART_Init>
	printf("Initializing");
     414:	86 e0       	ldi	r24, 0x06	; 6
     416:	91 e0       	ldi	r25, 0x01	; 1
     418:	9f 93       	push	r25
     41a:	8f 93       	push	r24
     41c:	0e 94 60 04 	call	0x8c0	; 0x8c0 <printf>
	xmem_init();	//Initializing Memory
     420:	0e 94 78 02 	call	0x4f0	; 0x4f0 <xmem_init>
	adc_init();		//Initializing ADC
     424:	0e 94 57 00 	call	0xae	; 0xae <adc_init>
     428:	0f 90       	pop	r0
     42a:	0f 90       	pop	r0
	while (1) 
    {
		//SRAM_test();	//Testing memory
		volatile char *ext_mem;
		//xmem_write(20, 0x0000);
		int16_t X = get_X_pos();
     42c:	0e 94 be 00 	call	0x17c	; 0x17c <get_X_pos>
     430:	c8 2e       	mov	r12, r24
     432:	b9 2e       	mov	r11, r25
		int16_t Y = get_Y_pos();
     434:	0e 94 44 01 	call	0x288	; 0x288 <get_Y_pos>
     438:	e8 2e       	mov	r14, r24
     43a:	d9 2e       	mov	r13, r25
		int16_t slider_r = get_slider_r();
     43c:	0e 94 fe 01 	call	0x3fc	; 0x3fc <get_slider_r>
     440:	18 2f       	mov	r17, r24
     442:	09 2f       	mov	r16, r25
		int16_t slider_l = get_slider_l();
     444:	0e 94 02 02 	call	0x404	; 0x404 <get_slider_l>
     448:	c8 2f       	mov	r28, r24
     44a:	d9 2f       	mov	r29, r25
		joystick_dir direction = get_dir();
     44c:	0e 94 ca 01 	call	0x394	; 0x394 <get_dir>
     450:	f8 2e       	mov	r15, r24
		printf("X = %d\n\r", X);
     452:	bf 92       	push	r11
     454:	cf 92       	push	r12
     456:	83 e1       	ldi	r24, 0x13	; 19
     458:	91 e0       	ldi	r25, 0x01	; 1
     45a:	9f 93       	push	r25
     45c:	8f 93       	push	r24
     45e:	0e 94 60 04 	call	0x8c0	; 0x8c0 <printf>
		printf("Y = %d\n\r", Y);
     462:	df 92       	push	r13
     464:	ef 92       	push	r14
     466:	8c e1       	ldi	r24, 0x1C	; 28
     468:	91 e0       	ldi	r25, 0x01	; 1
     46a:	9f 93       	push	r25
     46c:	8f 93       	push	r24
     46e:	0e 94 60 04 	call	0x8c0	; 0x8c0 <printf>
		printf("DIR =%d\n\r", direction);
     472:	1f 92       	push	r1
     474:	ff 92       	push	r15
     476:	85 e2       	ldi	r24, 0x25	; 37
     478:	91 e0       	ldi	r25, 0x01	; 1
     47a:	9f 93       	push	r25
     47c:	8f 93       	push	r24
     47e:	0e 94 60 04 	call	0x8c0	; 0x8c0 <printf>
		printf("Slider RIGHT = %d\n\r", slider_r);
     482:	0f 93       	push	r16
     484:	1f 93       	push	r17
     486:	8f e2       	ldi	r24, 0x2F	; 47
     488:	91 e0       	ldi	r25, 0x01	; 1
     48a:	9f 93       	push	r25
     48c:	8f 93       	push	r24
     48e:	0e 94 60 04 	call	0x8c0	; 0x8c0 <printf>
		printf("Slider LEFT = %d\n\r", slider_l);
     492:	df 93       	push	r29
     494:	cf 93       	push	r28
     496:	83 e4       	ldi	r24, 0x43	; 67
     498:	91 e0       	ldi	r25, 0x01	; 1
     49a:	9f 93       	push	r25
     49c:	8f 93       	push	r24
     49e:	0e 94 60 04 	call	0x8c0	; 0x8c0 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4a2:	2f e9       	ldi	r18, 0x9F	; 159
     4a4:	86 e8       	ldi	r24, 0x86	; 134
     4a6:	91 e0       	ldi	r25, 0x01	; 1
     4a8:	21 50       	subi	r18, 0x01	; 1
     4aa:	80 40       	sbci	r24, 0x00	; 0
     4ac:	90 40       	sbci	r25, 0x00	; 0
     4ae:	e1 f7       	brne	.-8      	; 0x4a8 <main+0x9c>
     4b0:	00 c0       	rjmp	.+0      	; 0x4b2 <main+0xa6>
     4b2:	00 00       	nop
     4b4:	8d b7       	in	r24, 0x3d	; 61
     4b6:	9e b7       	in	r25, 0x3e	; 62
     4b8:	44 96       	adiw	r24, 0x14	; 20
     4ba:	0f b6       	in	r0, 0x3f	; 63
     4bc:	f8 94       	cli
     4be:	9e bf       	out	0x3e, r25	; 62
     4c0:	0f be       	out	0x3f, r0	; 63
     4c2:	8d bf       	out	0x3d, r24	; 61
     4c4:	b3 cf       	rjmp	.-154    	; 0x42c <main+0x20>

000004c6 <USART_Transmit>:
}

void USART_Transmit(unsigned char data)
{
    /* Wait for empty transmit buffer */
    while (!(UCSR0A & (1 << UDRE0)))
     4c6:	5d 9b       	sbis	0x0b, 5	; 11
     4c8:	fe cf       	rjmp	.-4      	; 0x4c6 <USART_Transmit>
        ;
    /* Put data into buffer, sends the data */
    UDR0 = data;
     4ca:	8c b9       	out	0x0c, r24	; 12
     4cc:	08 95       	ret

000004ce <USART_Receive>:
}

unsigned char USART_Receive(void)
{
    /* Wait for data to be received */
    while (!(UCSR0A & (1 << RXC0)))
     4ce:	5f 9b       	sbis	0x0b, 7	; 11
     4d0:	fe cf       	rjmp	.-4      	; 0x4ce <USART_Receive>
        ;
    /* Get and return received data from buffer */
    return UDR0;
     4d2:	8c b1       	in	r24, 0x0c	; 12
}
     4d4:	08 95       	ret

000004d6 <USART_Init>:
#include "uart.h"

void USART_Init(unsigned int ubrr)
{
    /* Set baud rate */
    UBRR0H = (unsigned char)(ubrr >> 8);
     4d6:	90 bd       	out	0x20, r25	; 32
    UBRR0L = (unsigned char)ubrr;
     4d8:	89 b9       	out	0x09, r24	; 9
    /* Enable receiver and transmitter */
    UCSR0B = (1 << RXEN0) | (1 << TXEN0);
     4da:	88 e1       	ldi	r24, 0x18	; 24
     4dc:	8a b9       	out	0x0a, r24	; 10
    /* Set frame format: 8data, 2stop bit */
    UCSR0C = (1 << URSEL0) | (1 << USBS0) | (3 << UCSZ00);
     4de:	8e e8       	ldi	r24, 0x8E	; 142
     4e0:	80 bd       	out	0x20, r24	; 32
	
	fdevopen(USART_Transmit, USART_Receive);
     4e2:	67 e6       	ldi	r22, 0x67	; 103
     4e4:	72 e0       	ldi	r23, 0x02	; 2
     4e6:	83 e6       	ldi	r24, 0x63	; 99
     4e8:	92 e0       	ldi	r25, 0x02	; 2
     4ea:	0e 94 15 04 	call	0x82a	; 0x82a <fdevopen>
     4ee:	08 95       	ret

000004f0 <xmem_init>:

/*Initializing external memory driver
Basic code taken from slides
*/
void xmem_init(void){
	MCUCR |= (1 << SRE );  // enable XMEM
     4f0:	85 b7       	in	r24, 0x35	; 53
     4f2:	80 68       	ori	r24, 0x80	; 128
     4f4:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1 << XMM2 ); // mask unused bits (PC7-PC4 used for JTAG)
     4f6:	80 b7       	in	r24, 0x30	; 48
     4f8:	80 62       	ori	r24, 0x20	; 32
     4fa:	80 bf       	out	0x30, r24	; 48
     4fc:	08 95       	ret

000004fe <__cmpsf2>:
     4fe:	0e 94 f7 02 	call	0x5ee	; 0x5ee <__fp_cmp>
     502:	08 f4       	brcc	.+2      	; 0x506 <__stack+0x7>
     504:	81 e0       	ldi	r24, 0x01	; 1
     506:	08 95       	ret

00000508 <__fixsfsi>:
     508:	0e 94 8b 02 	call	0x516	; 0x516 <__fixunssfsi>
     50c:	68 94       	set
     50e:	b1 11       	cpse	r27, r1
     510:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__fp_szero>
     514:	08 95       	ret

00000516 <__fixunssfsi>:
     516:	0e 94 23 03 	call	0x646	; 0x646 <__fp_splitA>
     51a:	88 f0       	brcs	.+34     	; 0x53e <__fixunssfsi+0x28>
     51c:	9f 57       	subi	r25, 0x7F	; 127
     51e:	98 f0       	brcs	.+38     	; 0x546 <__fixunssfsi+0x30>
     520:	b9 2f       	mov	r27, r25
     522:	99 27       	eor	r25, r25
     524:	b7 51       	subi	r27, 0x17	; 23
     526:	b0 f0       	brcs	.+44     	; 0x554 <__fixunssfsi+0x3e>
     528:	e1 f0       	breq	.+56     	; 0x562 <__fixunssfsi+0x4c>
     52a:	66 0f       	add	r22, r22
     52c:	77 1f       	adc	r23, r23
     52e:	88 1f       	adc	r24, r24
     530:	99 1f       	adc	r25, r25
     532:	1a f0       	brmi	.+6      	; 0x53a <__fixunssfsi+0x24>
     534:	ba 95       	dec	r27
     536:	c9 f7       	brne	.-14     	; 0x52a <__fixunssfsi+0x14>
     538:	14 c0       	rjmp	.+40     	; 0x562 <__fixunssfsi+0x4c>
     53a:	b1 30       	cpi	r27, 0x01	; 1
     53c:	91 f0       	breq	.+36     	; 0x562 <__fixunssfsi+0x4c>
     53e:	0e 94 3d 03 	call	0x67a	; 0x67a <__fp_zero>
     542:	b1 e0       	ldi	r27, 0x01	; 1
     544:	08 95       	ret
     546:	0c 94 3d 03 	jmp	0x67a	; 0x67a <__fp_zero>
     54a:	67 2f       	mov	r22, r23
     54c:	78 2f       	mov	r23, r24
     54e:	88 27       	eor	r24, r24
     550:	b8 5f       	subi	r27, 0xF8	; 248
     552:	39 f0       	breq	.+14     	; 0x562 <__fixunssfsi+0x4c>
     554:	b9 3f       	cpi	r27, 0xF9	; 249
     556:	cc f3       	brlt	.-14     	; 0x54a <__fixunssfsi+0x34>
     558:	86 95       	lsr	r24
     55a:	77 95       	ror	r23
     55c:	67 95       	ror	r22
     55e:	b3 95       	inc	r27
     560:	d9 f7       	brne	.-10     	; 0x558 <__fixunssfsi+0x42>
     562:	3e f4       	brtc	.+14     	; 0x572 <__fixunssfsi+0x5c>
     564:	90 95       	com	r25
     566:	80 95       	com	r24
     568:	70 95       	com	r23
     56a:	61 95       	neg	r22
     56c:	7f 4f       	sbci	r23, 0xFF	; 255
     56e:	8f 4f       	sbci	r24, 0xFF	; 255
     570:	9f 4f       	sbci	r25, 0xFF	; 255
     572:	08 95       	ret

00000574 <__floatunsisf>:
     574:	e8 94       	clt
     576:	09 c0       	rjmp	.+18     	; 0x58a <__floatsisf+0x12>

00000578 <__floatsisf>:
     578:	97 fb       	bst	r25, 7
     57a:	3e f4       	brtc	.+14     	; 0x58a <__floatsisf+0x12>
     57c:	90 95       	com	r25
     57e:	80 95       	com	r24
     580:	70 95       	com	r23
     582:	61 95       	neg	r22
     584:	7f 4f       	sbci	r23, 0xFF	; 255
     586:	8f 4f       	sbci	r24, 0xFF	; 255
     588:	9f 4f       	sbci	r25, 0xFF	; 255
     58a:	99 23       	and	r25, r25
     58c:	a9 f0       	breq	.+42     	; 0x5b8 <__floatsisf+0x40>
     58e:	f9 2f       	mov	r31, r25
     590:	96 e9       	ldi	r25, 0x96	; 150
     592:	bb 27       	eor	r27, r27
     594:	93 95       	inc	r25
     596:	f6 95       	lsr	r31
     598:	87 95       	ror	r24
     59a:	77 95       	ror	r23
     59c:	67 95       	ror	r22
     59e:	b7 95       	ror	r27
     5a0:	f1 11       	cpse	r31, r1
     5a2:	f8 cf       	rjmp	.-16     	; 0x594 <__floatsisf+0x1c>
     5a4:	fa f4       	brpl	.+62     	; 0x5e4 <__floatsisf+0x6c>
     5a6:	bb 0f       	add	r27, r27
     5a8:	11 f4       	brne	.+4      	; 0x5ae <__floatsisf+0x36>
     5aa:	60 ff       	sbrs	r22, 0
     5ac:	1b c0       	rjmp	.+54     	; 0x5e4 <__floatsisf+0x6c>
     5ae:	6f 5f       	subi	r22, 0xFF	; 255
     5b0:	7f 4f       	sbci	r23, 0xFF	; 255
     5b2:	8f 4f       	sbci	r24, 0xFF	; 255
     5b4:	9f 4f       	sbci	r25, 0xFF	; 255
     5b6:	16 c0       	rjmp	.+44     	; 0x5e4 <__floatsisf+0x6c>
     5b8:	88 23       	and	r24, r24
     5ba:	11 f0       	breq	.+4      	; 0x5c0 <__floatsisf+0x48>
     5bc:	96 e9       	ldi	r25, 0x96	; 150
     5be:	11 c0       	rjmp	.+34     	; 0x5e2 <__floatsisf+0x6a>
     5c0:	77 23       	and	r23, r23
     5c2:	21 f0       	breq	.+8      	; 0x5cc <__floatsisf+0x54>
     5c4:	9e e8       	ldi	r25, 0x8E	; 142
     5c6:	87 2f       	mov	r24, r23
     5c8:	76 2f       	mov	r23, r22
     5ca:	05 c0       	rjmp	.+10     	; 0x5d6 <__floatsisf+0x5e>
     5cc:	66 23       	and	r22, r22
     5ce:	71 f0       	breq	.+28     	; 0x5ec <__floatsisf+0x74>
     5d0:	96 e8       	ldi	r25, 0x86	; 134
     5d2:	86 2f       	mov	r24, r22
     5d4:	70 e0       	ldi	r23, 0x00	; 0
     5d6:	60 e0       	ldi	r22, 0x00	; 0
     5d8:	2a f0       	brmi	.+10     	; 0x5e4 <__floatsisf+0x6c>
     5da:	9a 95       	dec	r25
     5dc:	66 0f       	add	r22, r22
     5de:	77 1f       	adc	r23, r23
     5e0:	88 1f       	adc	r24, r24
     5e2:	da f7       	brpl	.-10     	; 0x5da <__floatsisf+0x62>
     5e4:	88 0f       	add	r24, r24
     5e6:	96 95       	lsr	r25
     5e8:	87 95       	ror	r24
     5ea:	97 f9       	bld	r25, 7
     5ec:	08 95       	ret

000005ee <__fp_cmp>:
     5ee:	99 0f       	add	r25, r25
     5f0:	00 08       	sbc	r0, r0
     5f2:	55 0f       	add	r21, r21
     5f4:	aa 0b       	sbc	r26, r26
     5f6:	e0 e8       	ldi	r30, 0x80	; 128
     5f8:	fe ef       	ldi	r31, 0xFE	; 254
     5fa:	16 16       	cp	r1, r22
     5fc:	17 06       	cpc	r1, r23
     5fe:	e8 07       	cpc	r30, r24
     600:	f9 07       	cpc	r31, r25
     602:	c0 f0       	brcs	.+48     	; 0x634 <__fp_cmp+0x46>
     604:	12 16       	cp	r1, r18
     606:	13 06       	cpc	r1, r19
     608:	e4 07       	cpc	r30, r20
     60a:	f5 07       	cpc	r31, r21
     60c:	98 f0       	brcs	.+38     	; 0x634 <__fp_cmp+0x46>
     60e:	62 1b       	sub	r22, r18
     610:	73 0b       	sbc	r23, r19
     612:	84 0b       	sbc	r24, r20
     614:	95 0b       	sbc	r25, r21
     616:	39 f4       	brne	.+14     	; 0x626 <__fp_cmp+0x38>
     618:	0a 26       	eor	r0, r26
     61a:	61 f0       	breq	.+24     	; 0x634 <__fp_cmp+0x46>
     61c:	23 2b       	or	r18, r19
     61e:	24 2b       	or	r18, r20
     620:	25 2b       	or	r18, r21
     622:	21 f4       	brne	.+8      	; 0x62c <__fp_cmp+0x3e>
     624:	08 95       	ret
     626:	0a 26       	eor	r0, r26
     628:	09 f4       	brne	.+2      	; 0x62c <__fp_cmp+0x3e>
     62a:	a1 40       	sbci	r26, 0x01	; 1
     62c:	a6 95       	lsr	r26
     62e:	8f ef       	ldi	r24, 0xFF	; 255
     630:	81 1d       	adc	r24, r1
     632:	81 1d       	adc	r24, r1
     634:	08 95       	ret

00000636 <__fp_split3>:
     636:	57 fd       	sbrc	r21, 7
     638:	90 58       	subi	r25, 0x80	; 128
     63a:	44 0f       	add	r20, r20
     63c:	55 1f       	adc	r21, r21
     63e:	59 f0       	breq	.+22     	; 0x656 <__fp_splitA+0x10>
     640:	5f 3f       	cpi	r21, 0xFF	; 255
     642:	71 f0       	breq	.+28     	; 0x660 <__fp_splitA+0x1a>
     644:	47 95       	ror	r20

00000646 <__fp_splitA>:
     646:	88 0f       	add	r24, r24
     648:	97 fb       	bst	r25, 7
     64a:	99 1f       	adc	r25, r25
     64c:	61 f0       	breq	.+24     	; 0x666 <__fp_splitA+0x20>
     64e:	9f 3f       	cpi	r25, 0xFF	; 255
     650:	79 f0       	breq	.+30     	; 0x670 <__fp_splitA+0x2a>
     652:	87 95       	ror	r24
     654:	08 95       	ret
     656:	12 16       	cp	r1, r18
     658:	13 06       	cpc	r1, r19
     65a:	14 06       	cpc	r1, r20
     65c:	55 1f       	adc	r21, r21
     65e:	f2 cf       	rjmp	.-28     	; 0x644 <__fp_split3+0xe>
     660:	46 95       	lsr	r20
     662:	f1 df       	rcall	.-30     	; 0x646 <__fp_splitA>
     664:	08 c0       	rjmp	.+16     	; 0x676 <__fp_splitA+0x30>
     666:	16 16       	cp	r1, r22
     668:	17 06       	cpc	r1, r23
     66a:	18 06       	cpc	r1, r24
     66c:	99 1f       	adc	r25, r25
     66e:	f1 cf       	rjmp	.-30     	; 0x652 <__fp_splitA+0xc>
     670:	86 95       	lsr	r24
     672:	71 05       	cpc	r23, r1
     674:	61 05       	cpc	r22, r1
     676:	08 94       	sec
     678:	08 95       	ret

0000067a <__fp_zero>:
     67a:	e8 94       	clt

0000067c <__fp_szero>:
     67c:	bb 27       	eor	r27, r27
     67e:	66 27       	eor	r22, r22
     680:	77 27       	eor	r23, r23
     682:	cb 01       	movw	r24, r22
     684:	97 f9       	bld	r25, 7
     686:	08 95       	ret

00000688 <__gesf2>:
     688:	0e 94 f7 02 	call	0x5ee	; 0x5ee <__fp_cmp>
     68c:	08 f4       	brcc	.+2      	; 0x690 <__gesf2+0x8>
     68e:	8f ef       	ldi	r24, 0xFF	; 255
     690:	08 95       	ret

00000692 <__mulsf3>:
     692:	0e 94 5c 03 	call	0x6b8	; 0x6b8 <__mulsf3x>
     696:	0c 94 cd 03 	jmp	0x79a	; 0x79a <__fp_round>
     69a:	0e 94 bf 03 	call	0x77e	; 0x77e <__fp_pscA>
     69e:	38 f0       	brcs	.+14     	; 0x6ae <__mulsf3+0x1c>
     6a0:	0e 94 c6 03 	call	0x78c	; 0x78c <__fp_pscB>
     6a4:	20 f0       	brcs	.+8      	; 0x6ae <__mulsf3+0x1c>
     6a6:	95 23       	and	r25, r21
     6a8:	11 f0       	breq	.+4      	; 0x6ae <__mulsf3+0x1c>
     6aa:	0c 94 b6 03 	jmp	0x76c	; 0x76c <__fp_inf>
     6ae:	0c 94 bc 03 	jmp	0x778	; 0x778 <__fp_nan>
     6b2:	11 24       	eor	r1, r1
     6b4:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__fp_szero>

000006b8 <__mulsf3x>:
     6b8:	0e 94 1b 03 	call	0x636	; 0x636 <__fp_split3>
     6bc:	70 f3       	brcs	.-36     	; 0x69a <__mulsf3+0x8>

000006be <__mulsf3_pse>:
     6be:	95 9f       	mul	r25, r21
     6c0:	c1 f3       	breq	.-16     	; 0x6b2 <__mulsf3+0x20>
     6c2:	95 0f       	add	r25, r21
     6c4:	50 e0       	ldi	r21, 0x00	; 0
     6c6:	55 1f       	adc	r21, r21
     6c8:	62 9f       	mul	r22, r18
     6ca:	f0 01       	movw	r30, r0
     6cc:	72 9f       	mul	r23, r18
     6ce:	bb 27       	eor	r27, r27
     6d0:	f0 0d       	add	r31, r0
     6d2:	b1 1d       	adc	r27, r1
     6d4:	63 9f       	mul	r22, r19
     6d6:	aa 27       	eor	r26, r26
     6d8:	f0 0d       	add	r31, r0
     6da:	b1 1d       	adc	r27, r1
     6dc:	aa 1f       	adc	r26, r26
     6de:	64 9f       	mul	r22, r20
     6e0:	66 27       	eor	r22, r22
     6e2:	b0 0d       	add	r27, r0
     6e4:	a1 1d       	adc	r26, r1
     6e6:	66 1f       	adc	r22, r22
     6e8:	82 9f       	mul	r24, r18
     6ea:	22 27       	eor	r18, r18
     6ec:	b0 0d       	add	r27, r0
     6ee:	a1 1d       	adc	r26, r1
     6f0:	62 1f       	adc	r22, r18
     6f2:	73 9f       	mul	r23, r19
     6f4:	b0 0d       	add	r27, r0
     6f6:	a1 1d       	adc	r26, r1
     6f8:	62 1f       	adc	r22, r18
     6fa:	83 9f       	mul	r24, r19
     6fc:	a0 0d       	add	r26, r0
     6fe:	61 1d       	adc	r22, r1
     700:	22 1f       	adc	r18, r18
     702:	74 9f       	mul	r23, r20
     704:	33 27       	eor	r19, r19
     706:	a0 0d       	add	r26, r0
     708:	61 1d       	adc	r22, r1
     70a:	23 1f       	adc	r18, r19
     70c:	84 9f       	mul	r24, r20
     70e:	60 0d       	add	r22, r0
     710:	21 1d       	adc	r18, r1
     712:	82 2f       	mov	r24, r18
     714:	76 2f       	mov	r23, r22
     716:	6a 2f       	mov	r22, r26
     718:	11 24       	eor	r1, r1
     71a:	9f 57       	subi	r25, 0x7F	; 127
     71c:	50 40       	sbci	r21, 0x00	; 0
     71e:	9a f0       	brmi	.+38     	; 0x746 <__mulsf3_pse+0x88>
     720:	f1 f0       	breq	.+60     	; 0x75e <__mulsf3_pse+0xa0>
     722:	88 23       	and	r24, r24
     724:	4a f0       	brmi	.+18     	; 0x738 <__mulsf3_pse+0x7a>
     726:	ee 0f       	add	r30, r30
     728:	ff 1f       	adc	r31, r31
     72a:	bb 1f       	adc	r27, r27
     72c:	66 1f       	adc	r22, r22
     72e:	77 1f       	adc	r23, r23
     730:	88 1f       	adc	r24, r24
     732:	91 50       	subi	r25, 0x01	; 1
     734:	50 40       	sbci	r21, 0x00	; 0
     736:	a9 f7       	brne	.-22     	; 0x722 <__mulsf3_pse+0x64>
     738:	9e 3f       	cpi	r25, 0xFE	; 254
     73a:	51 05       	cpc	r21, r1
     73c:	80 f0       	brcs	.+32     	; 0x75e <__mulsf3_pse+0xa0>
     73e:	0c 94 b6 03 	jmp	0x76c	; 0x76c <__fp_inf>
     742:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__fp_szero>
     746:	5f 3f       	cpi	r21, 0xFF	; 255
     748:	e4 f3       	brlt	.-8      	; 0x742 <__mulsf3_pse+0x84>
     74a:	98 3e       	cpi	r25, 0xE8	; 232
     74c:	d4 f3       	brlt	.-12     	; 0x742 <__mulsf3_pse+0x84>
     74e:	86 95       	lsr	r24
     750:	77 95       	ror	r23
     752:	67 95       	ror	r22
     754:	b7 95       	ror	r27
     756:	f7 95       	ror	r31
     758:	e7 95       	ror	r30
     75a:	9f 5f       	subi	r25, 0xFF	; 255
     75c:	c1 f7       	brne	.-16     	; 0x74e <__mulsf3_pse+0x90>
     75e:	fe 2b       	or	r31, r30
     760:	88 0f       	add	r24, r24
     762:	91 1d       	adc	r25, r1
     764:	96 95       	lsr	r25
     766:	87 95       	ror	r24
     768:	97 f9       	bld	r25, 7
     76a:	08 95       	ret

0000076c <__fp_inf>:
     76c:	97 f9       	bld	r25, 7
     76e:	9f 67       	ori	r25, 0x7F	; 127
     770:	80 e8       	ldi	r24, 0x80	; 128
     772:	70 e0       	ldi	r23, 0x00	; 0
     774:	60 e0       	ldi	r22, 0x00	; 0
     776:	08 95       	ret

00000778 <__fp_nan>:
     778:	9f ef       	ldi	r25, 0xFF	; 255
     77a:	80 ec       	ldi	r24, 0xC0	; 192
     77c:	08 95       	ret

0000077e <__fp_pscA>:
     77e:	00 24       	eor	r0, r0
     780:	0a 94       	dec	r0
     782:	16 16       	cp	r1, r22
     784:	17 06       	cpc	r1, r23
     786:	18 06       	cpc	r1, r24
     788:	09 06       	cpc	r0, r25
     78a:	08 95       	ret

0000078c <__fp_pscB>:
     78c:	00 24       	eor	r0, r0
     78e:	0a 94       	dec	r0
     790:	12 16       	cp	r1, r18
     792:	13 06       	cpc	r1, r19
     794:	14 06       	cpc	r1, r20
     796:	05 06       	cpc	r0, r21
     798:	08 95       	ret

0000079a <__fp_round>:
     79a:	09 2e       	mov	r0, r25
     79c:	03 94       	inc	r0
     79e:	00 0c       	add	r0, r0
     7a0:	11 f4       	brne	.+4      	; 0x7a6 <__fp_round+0xc>
     7a2:	88 23       	and	r24, r24
     7a4:	52 f0       	brmi	.+20     	; 0x7ba <__fp_round+0x20>
     7a6:	bb 0f       	add	r27, r27
     7a8:	40 f4       	brcc	.+16     	; 0x7ba <__fp_round+0x20>
     7aa:	bf 2b       	or	r27, r31
     7ac:	11 f4       	brne	.+4      	; 0x7b2 <__fp_round+0x18>
     7ae:	60 ff       	sbrs	r22, 0
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fp_round+0x20>
     7b2:	6f 5f       	subi	r22, 0xFF	; 255
     7b4:	7f 4f       	sbci	r23, 0xFF	; 255
     7b6:	8f 4f       	sbci	r24, 0xFF	; 255
     7b8:	9f 4f       	sbci	r25, 0xFF	; 255
     7ba:	08 95       	ret

000007bc <__divmodhi4>:
     7bc:	97 fb       	bst	r25, 7
     7be:	07 2e       	mov	r0, r23
     7c0:	16 f4       	brtc	.+4      	; 0x7c6 <__divmodhi4+0xa>
     7c2:	00 94       	com	r0
     7c4:	07 d0       	rcall	.+14     	; 0x7d4 <__divmodhi4_neg1>
     7c6:	77 fd       	sbrc	r23, 7
     7c8:	09 d0       	rcall	.+18     	; 0x7dc <__divmodhi4_neg2>
     7ca:	0e 94 01 04 	call	0x802	; 0x802 <__udivmodhi4>
     7ce:	07 fc       	sbrc	r0, 7
     7d0:	05 d0       	rcall	.+10     	; 0x7dc <__divmodhi4_neg2>
     7d2:	3e f4       	brtc	.+14     	; 0x7e2 <__divmodhi4_exit>

000007d4 <__divmodhi4_neg1>:
     7d4:	90 95       	com	r25
     7d6:	81 95       	neg	r24
     7d8:	9f 4f       	sbci	r25, 0xFF	; 255
     7da:	08 95       	ret

000007dc <__divmodhi4_neg2>:
     7dc:	70 95       	com	r23
     7de:	61 95       	neg	r22
     7e0:	7f 4f       	sbci	r23, 0xFF	; 255

000007e2 <__divmodhi4_exit>:
     7e2:	08 95       	ret

000007e4 <__umulhisi3>:
     7e4:	a2 9f       	mul	r26, r18
     7e6:	b0 01       	movw	r22, r0
     7e8:	b3 9f       	mul	r27, r19
     7ea:	c0 01       	movw	r24, r0
     7ec:	a3 9f       	mul	r26, r19
     7ee:	70 0d       	add	r23, r0
     7f0:	81 1d       	adc	r24, r1
     7f2:	11 24       	eor	r1, r1
     7f4:	91 1d       	adc	r25, r1
     7f6:	b2 9f       	mul	r27, r18
     7f8:	70 0d       	add	r23, r0
     7fa:	81 1d       	adc	r24, r1
     7fc:	11 24       	eor	r1, r1
     7fe:	91 1d       	adc	r25, r1
     800:	08 95       	ret

00000802 <__udivmodhi4>:
     802:	aa 1b       	sub	r26, r26
     804:	bb 1b       	sub	r27, r27
     806:	51 e1       	ldi	r21, 0x11	; 17
     808:	07 c0       	rjmp	.+14     	; 0x818 <__udivmodhi4_ep>

0000080a <__udivmodhi4_loop>:
     80a:	aa 1f       	adc	r26, r26
     80c:	bb 1f       	adc	r27, r27
     80e:	a6 17       	cp	r26, r22
     810:	b7 07       	cpc	r27, r23
     812:	10 f0       	brcs	.+4      	; 0x818 <__udivmodhi4_ep>
     814:	a6 1b       	sub	r26, r22
     816:	b7 0b       	sbc	r27, r23

00000818 <__udivmodhi4_ep>:
     818:	88 1f       	adc	r24, r24
     81a:	99 1f       	adc	r25, r25
     81c:	5a 95       	dec	r21
     81e:	a9 f7       	brne	.-22     	; 0x80a <__udivmodhi4_loop>
     820:	80 95       	com	r24
     822:	90 95       	com	r25
     824:	bc 01       	movw	r22, r24
     826:	cd 01       	movw	r24, r26
     828:	08 95       	ret

0000082a <fdevopen>:
     82a:	0f 93       	push	r16
     82c:	1f 93       	push	r17
     82e:	cf 93       	push	r28
     830:	df 93       	push	r29
     832:	00 97       	sbiw	r24, 0x00	; 0
     834:	31 f4       	brne	.+12     	; 0x842 <fdevopen+0x18>
     836:	61 15       	cp	r22, r1
     838:	71 05       	cpc	r23, r1
     83a:	19 f4       	brne	.+6      	; 0x842 <fdevopen+0x18>
     83c:	80 e0       	ldi	r24, 0x00	; 0
     83e:	90 e0       	ldi	r25, 0x00	; 0
     840:	3a c0       	rjmp	.+116    	; 0x8b6 <fdevopen+0x8c>
     842:	8b 01       	movw	r16, r22
     844:	ec 01       	movw	r28, r24
     846:	6e e0       	ldi	r22, 0x0E	; 14
     848:	70 e0       	ldi	r23, 0x00	; 0
     84a:	81 e0       	ldi	r24, 0x01	; 1
     84c:	90 e0       	ldi	r25, 0x00	; 0
     84e:	0e 94 57 06 	call	0xcae	; 0xcae <calloc>
     852:	fc 01       	movw	r30, r24
     854:	89 2b       	or	r24, r25
     856:	91 f3       	breq	.-28     	; 0x83c <fdevopen+0x12>
     858:	80 e8       	ldi	r24, 0x80	; 128
     85a:	83 83       	std	Z+3, r24	; 0x03
     85c:	01 15       	cp	r16, r1
     85e:	11 05       	cpc	r17, r1
     860:	71 f0       	breq	.+28     	; 0x87e <fdevopen+0x54>
     862:	13 87       	std	Z+11, r17	; 0x0b
     864:	02 87       	std	Z+10, r16	; 0x0a
     866:	81 e8       	ldi	r24, 0x81	; 129
     868:	83 83       	std	Z+3, r24	; 0x03
     86a:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <__data_end>
     86e:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <__data_end+0x1>
     872:	89 2b       	or	r24, r25
     874:	21 f4       	brne	.+8      	; 0x87e <fdevopen+0x54>
     876:	f0 93 57 01 	sts	0x0157, r31	; 0x800157 <__data_end+0x1>
     87a:	e0 93 56 01 	sts	0x0156, r30	; 0x800156 <__data_end>
     87e:	20 97       	sbiw	r28, 0x00	; 0
     880:	c9 f0       	breq	.+50     	; 0x8b4 <fdevopen+0x8a>
     882:	d1 87       	std	Z+9, r29	; 0x09
     884:	c0 87       	std	Z+8, r28	; 0x08
     886:	83 81       	ldd	r24, Z+3	; 0x03
     888:	82 60       	ori	r24, 0x02	; 2
     88a:	83 83       	std	Z+3, r24	; 0x03
     88c:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <__data_end+0x2>
     890:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <__data_end+0x3>
     894:	89 2b       	or	r24, r25
     896:	71 f4       	brne	.+28     	; 0x8b4 <fdevopen+0x8a>
     898:	f0 93 59 01 	sts	0x0159, r31	; 0x800159 <__data_end+0x3>
     89c:	e0 93 58 01 	sts	0x0158, r30	; 0x800158 <__data_end+0x2>
     8a0:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <__data_end+0x4>
     8a4:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <__data_end+0x5>
     8a8:	89 2b       	or	r24, r25
     8aa:	21 f4       	brne	.+8      	; 0x8b4 <fdevopen+0x8a>
     8ac:	f0 93 5b 01 	sts	0x015B, r31	; 0x80015b <__data_end+0x5>
     8b0:	e0 93 5a 01 	sts	0x015A, r30	; 0x80015a <__data_end+0x4>
     8b4:	cf 01       	movw	r24, r30
     8b6:	df 91       	pop	r29
     8b8:	cf 91       	pop	r28
     8ba:	1f 91       	pop	r17
     8bc:	0f 91       	pop	r16
     8be:	08 95       	ret

000008c0 <printf>:
     8c0:	a0 e0       	ldi	r26, 0x00	; 0
     8c2:	b0 e0       	ldi	r27, 0x00	; 0
     8c4:	e6 e6       	ldi	r30, 0x66	; 102
     8c6:	f4 e0       	ldi	r31, 0x04	; 4
     8c8:	0c 94 5b 08 	jmp	0x10b6	; 0x10b6 <__prologue_saves__+0x20>
     8cc:	ae 01       	movw	r20, r28
     8ce:	4b 5f       	subi	r20, 0xFB	; 251
     8d0:	5f 4f       	sbci	r21, 0xFF	; 255
     8d2:	fa 01       	movw	r30, r20
     8d4:	61 91       	ld	r22, Z+
     8d6:	71 91       	ld	r23, Z+
     8d8:	af 01       	movw	r20, r30
     8da:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <__data_end+0x2>
     8de:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <__data_end+0x3>
     8e2:	0e 94 76 04 	call	0x8ec	; 0x8ec <vfprintf>
     8e6:	e2 e0       	ldi	r30, 0x02	; 2
     8e8:	0c 94 77 08 	jmp	0x10ee	; 0x10ee <__epilogue_restores__+0x20>

000008ec <vfprintf>:
     8ec:	ab e0       	ldi	r26, 0x0B	; 11
     8ee:	b0 e0       	ldi	r27, 0x00	; 0
     8f0:	ec e7       	ldi	r30, 0x7C	; 124
     8f2:	f4 e0       	ldi	r31, 0x04	; 4
     8f4:	0c 94 4b 08 	jmp	0x1096	; 0x1096 <__prologue_saves__>
     8f8:	6c 01       	movw	r12, r24
     8fa:	7b 01       	movw	r14, r22
     8fc:	8a 01       	movw	r16, r20
     8fe:	fc 01       	movw	r30, r24
     900:	17 82       	std	Z+7, r1	; 0x07
     902:	16 82       	std	Z+6, r1	; 0x06
     904:	83 81       	ldd	r24, Z+3	; 0x03
     906:	81 ff       	sbrs	r24, 1
     908:	cc c1       	rjmp	.+920    	; 0xca2 <vfprintf+0x3b6>
     90a:	ce 01       	movw	r24, r28
     90c:	01 96       	adiw	r24, 0x01	; 1
     90e:	3c 01       	movw	r6, r24
     910:	f6 01       	movw	r30, r12
     912:	93 81       	ldd	r25, Z+3	; 0x03
     914:	f7 01       	movw	r30, r14
     916:	93 fd       	sbrc	r25, 3
     918:	85 91       	lpm	r24, Z+
     91a:	93 ff       	sbrs	r25, 3
     91c:	81 91       	ld	r24, Z+
     91e:	7f 01       	movw	r14, r30
     920:	88 23       	and	r24, r24
     922:	09 f4       	brne	.+2      	; 0x926 <vfprintf+0x3a>
     924:	ba c1       	rjmp	.+884    	; 0xc9a <vfprintf+0x3ae>
     926:	85 32       	cpi	r24, 0x25	; 37
     928:	39 f4       	brne	.+14     	; 0x938 <vfprintf+0x4c>
     92a:	93 fd       	sbrc	r25, 3
     92c:	85 91       	lpm	r24, Z+
     92e:	93 ff       	sbrs	r25, 3
     930:	81 91       	ld	r24, Z+
     932:	7f 01       	movw	r14, r30
     934:	85 32       	cpi	r24, 0x25	; 37
     936:	29 f4       	brne	.+10     	; 0x942 <vfprintf+0x56>
     938:	b6 01       	movw	r22, r12
     93a:	90 e0       	ldi	r25, 0x00	; 0
     93c:	0e 94 b1 07 	call	0xf62	; 0xf62 <fputc>
     940:	e7 cf       	rjmp	.-50     	; 0x910 <vfprintf+0x24>
     942:	91 2c       	mov	r9, r1
     944:	21 2c       	mov	r2, r1
     946:	31 2c       	mov	r3, r1
     948:	ff e1       	ldi	r31, 0x1F	; 31
     94a:	f3 15       	cp	r31, r3
     94c:	d8 f0       	brcs	.+54     	; 0x984 <vfprintf+0x98>
     94e:	8b 32       	cpi	r24, 0x2B	; 43
     950:	79 f0       	breq	.+30     	; 0x970 <vfprintf+0x84>
     952:	38 f4       	brcc	.+14     	; 0x962 <vfprintf+0x76>
     954:	80 32       	cpi	r24, 0x20	; 32
     956:	79 f0       	breq	.+30     	; 0x976 <vfprintf+0x8a>
     958:	83 32       	cpi	r24, 0x23	; 35
     95a:	a1 f4       	brne	.+40     	; 0x984 <vfprintf+0x98>
     95c:	23 2d       	mov	r18, r3
     95e:	20 61       	ori	r18, 0x10	; 16
     960:	1d c0       	rjmp	.+58     	; 0x99c <vfprintf+0xb0>
     962:	8d 32       	cpi	r24, 0x2D	; 45
     964:	61 f0       	breq	.+24     	; 0x97e <vfprintf+0x92>
     966:	80 33       	cpi	r24, 0x30	; 48
     968:	69 f4       	brne	.+26     	; 0x984 <vfprintf+0x98>
     96a:	23 2d       	mov	r18, r3
     96c:	21 60       	ori	r18, 0x01	; 1
     96e:	16 c0       	rjmp	.+44     	; 0x99c <vfprintf+0xb0>
     970:	83 2d       	mov	r24, r3
     972:	82 60       	ori	r24, 0x02	; 2
     974:	38 2e       	mov	r3, r24
     976:	e3 2d       	mov	r30, r3
     978:	e4 60       	ori	r30, 0x04	; 4
     97a:	3e 2e       	mov	r3, r30
     97c:	2a c0       	rjmp	.+84     	; 0x9d2 <vfprintf+0xe6>
     97e:	f3 2d       	mov	r31, r3
     980:	f8 60       	ori	r31, 0x08	; 8
     982:	1d c0       	rjmp	.+58     	; 0x9be <vfprintf+0xd2>
     984:	37 fc       	sbrc	r3, 7
     986:	2d c0       	rjmp	.+90     	; 0x9e2 <vfprintf+0xf6>
     988:	20 ed       	ldi	r18, 0xD0	; 208
     98a:	28 0f       	add	r18, r24
     98c:	2a 30       	cpi	r18, 0x0A	; 10
     98e:	40 f0       	brcs	.+16     	; 0x9a0 <vfprintf+0xb4>
     990:	8e 32       	cpi	r24, 0x2E	; 46
     992:	b9 f4       	brne	.+46     	; 0x9c2 <vfprintf+0xd6>
     994:	36 fc       	sbrc	r3, 6
     996:	81 c1       	rjmp	.+770    	; 0xc9a <vfprintf+0x3ae>
     998:	23 2d       	mov	r18, r3
     99a:	20 64       	ori	r18, 0x40	; 64
     99c:	32 2e       	mov	r3, r18
     99e:	19 c0       	rjmp	.+50     	; 0x9d2 <vfprintf+0xe6>
     9a0:	36 fe       	sbrs	r3, 6
     9a2:	06 c0       	rjmp	.+12     	; 0x9b0 <vfprintf+0xc4>
     9a4:	8a e0       	ldi	r24, 0x0A	; 10
     9a6:	98 9e       	mul	r9, r24
     9a8:	20 0d       	add	r18, r0
     9aa:	11 24       	eor	r1, r1
     9ac:	92 2e       	mov	r9, r18
     9ae:	11 c0       	rjmp	.+34     	; 0x9d2 <vfprintf+0xe6>
     9b0:	ea e0       	ldi	r30, 0x0A	; 10
     9b2:	2e 9e       	mul	r2, r30
     9b4:	20 0d       	add	r18, r0
     9b6:	11 24       	eor	r1, r1
     9b8:	22 2e       	mov	r2, r18
     9ba:	f3 2d       	mov	r31, r3
     9bc:	f0 62       	ori	r31, 0x20	; 32
     9be:	3f 2e       	mov	r3, r31
     9c0:	08 c0       	rjmp	.+16     	; 0x9d2 <vfprintf+0xe6>
     9c2:	8c 36       	cpi	r24, 0x6C	; 108
     9c4:	21 f4       	brne	.+8      	; 0x9ce <vfprintf+0xe2>
     9c6:	83 2d       	mov	r24, r3
     9c8:	80 68       	ori	r24, 0x80	; 128
     9ca:	38 2e       	mov	r3, r24
     9cc:	02 c0       	rjmp	.+4      	; 0x9d2 <vfprintf+0xe6>
     9ce:	88 36       	cpi	r24, 0x68	; 104
     9d0:	41 f4       	brne	.+16     	; 0x9e2 <vfprintf+0xf6>
     9d2:	f7 01       	movw	r30, r14
     9d4:	93 fd       	sbrc	r25, 3
     9d6:	85 91       	lpm	r24, Z+
     9d8:	93 ff       	sbrs	r25, 3
     9da:	81 91       	ld	r24, Z+
     9dc:	7f 01       	movw	r14, r30
     9de:	81 11       	cpse	r24, r1
     9e0:	b3 cf       	rjmp	.-154    	; 0x948 <vfprintf+0x5c>
     9e2:	98 2f       	mov	r25, r24
     9e4:	9f 7d       	andi	r25, 0xDF	; 223
     9e6:	95 54       	subi	r25, 0x45	; 69
     9e8:	93 30       	cpi	r25, 0x03	; 3
     9ea:	28 f4       	brcc	.+10     	; 0x9f6 <vfprintf+0x10a>
     9ec:	0c 5f       	subi	r16, 0xFC	; 252
     9ee:	1f 4f       	sbci	r17, 0xFF	; 255
     9f0:	9f e3       	ldi	r25, 0x3F	; 63
     9f2:	99 83       	std	Y+1, r25	; 0x01
     9f4:	0d c0       	rjmp	.+26     	; 0xa10 <vfprintf+0x124>
     9f6:	83 36       	cpi	r24, 0x63	; 99
     9f8:	31 f0       	breq	.+12     	; 0xa06 <vfprintf+0x11a>
     9fa:	83 37       	cpi	r24, 0x73	; 115
     9fc:	71 f0       	breq	.+28     	; 0xa1a <vfprintf+0x12e>
     9fe:	83 35       	cpi	r24, 0x53	; 83
     a00:	09 f0       	breq	.+2      	; 0xa04 <vfprintf+0x118>
     a02:	59 c0       	rjmp	.+178    	; 0xab6 <vfprintf+0x1ca>
     a04:	21 c0       	rjmp	.+66     	; 0xa48 <vfprintf+0x15c>
     a06:	f8 01       	movw	r30, r16
     a08:	80 81       	ld	r24, Z
     a0a:	89 83       	std	Y+1, r24	; 0x01
     a0c:	0e 5f       	subi	r16, 0xFE	; 254
     a0e:	1f 4f       	sbci	r17, 0xFF	; 255
     a10:	88 24       	eor	r8, r8
     a12:	83 94       	inc	r8
     a14:	91 2c       	mov	r9, r1
     a16:	53 01       	movw	r10, r6
     a18:	13 c0       	rjmp	.+38     	; 0xa40 <vfprintf+0x154>
     a1a:	28 01       	movw	r4, r16
     a1c:	f2 e0       	ldi	r31, 0x02	; 2
     a1e:	4f 0e       	add	r4, r31
     a20:	51 1c       	adc	r5, r1
     a22:	f8 01       	movw	r30, r16
     a24:	a0 80       	ld	r10, Z
     a26:	b1 80       	ldd	r11, Z+1	; 0x01
     a28:	36 fe       	sbrs	r3, 6
     a2a:	03 c0       	rjmp	.+6      	; 0xa32 <vfprintf+0x146>
     a2c:	69 2d       	mov	r22, r9
     a2e:	70 e0       	ldi	r23, 0x00	; 0
     a30:	02 c0       	rjmp	.+4      	; 0xa36 <vfprintf+0x14a>
     a32:	6f ef       	ldi	r22, 0xFF	; 255
     a34:	7f ef       	ldi	r23, 0xFF	; 255
     a36:	c5 01       	movw	r24, r10
     a38:	0e 94 a6 07 	call	0xf4c	; 0xf4c <strnlen>
     a3c:	4c 01       	movw	r8, r24
     a3e:	82 01       	movw	r16, r4
     a40:	f3 2d       	mov	r31, r3
     a42:	ff 77       	andi	r31, 0x7F	; 127
     a44:	3f 2e       	mov	r3, r31
     a46:	16 c0       	rjmp	.+44     	; 0xa74 <vfprintf+0x188>
     a48:	28 01       	movw	r4, r16
     a4a:	22 e0       	ldi	r18, 0x02	; 2
     a4c:	42 0e       	add	r4, r18
     a4e:	51 1c       	adc	r5, r1
     a50:	f8 01       	movw	r30, r16
     a52:	a0 80       	ld	r10, Z
     a54:	b1 80       	ldd	r11, Z+1	; 0x01
     a56:	36 fe       	sbrs	r3, 6
     a58:	03 c0       	rjmp	.+6      	; 0xa60 <vfprintf+0x174>
     a5a:	69 2d       	mov	r22, r9
     a5c:	70 e0       	ldi	r23, 0x00	; 0
     a5e:	02 c0       	rjmp	.+4      	; 0xa64 <vfprintf+0x178>
     a60:	6f ef       	ldi	r22, 0xFF	; 255
     a62:	7f ef       	ldi	r23, 0xFF	; 255
     a64:	c5 01       	movw	r24, r10
     a66:	0e 94 94 07 	call	0xf28	; 0xf28 <strnlen_P>
     a6a:	4c 01       	movw	r8, r24
     a6c:	f3 2d       	mov	r31, r3
     a6e:	f0 68       	ori	r31, 0x80	; 128
     a70:	3f 2e       	mov	r3, r31
     a72:	82 01       	movw	r16, r4
     a74:	33 fc       	sbrc	r3, 3
     a76:	1b c0       	rjmp	.+54     	; 0xaae <vfprintf+0x1c2>
     a78:	82 2d       	mov	r24, r2
     a7a:	90 e0       	ldi	r25, 0x00	; 0
     a7c:	88 16       	cp	r8, r24
     a7e:	99 06       	cpc	r9, r25
     a80:	b0 f4       	brcc	.+44     	; 0xaae <vfprintf+0x1c2>
     a82:	b6 01       	movw	r22, r12
     a84:	80 e2       	ldi	r24, 0x20	; 32
     a86:	90 e0       	ldi	r25, 0x00	; 0
     a88:	0e 94 b1 07 	call	0xf62	; 0xf62 <fputc>
     a8c:	2a 94       	dec	r2
     a8e:	f4 cf       	rjmp	.-24     	; 0xa78 <vfprintf+0x18c>
     a90:	f5 01       	movw	r30, r10
     a92:	37 fc       	sbrc	r3, 7
     a94:	85 91       	lpm	r24, Z+
     a96:	37 fe       	sbrs	r3, 7
     a98:	81 91       	ld	r24, Z+
     a9a:	5f 01       	movw	r10, r30
     a9c:	b6 01       	movw	r22, r12
     a9e:	90 e0       	ldi	r25, 0x00	; 0
     aa0:	0e 94 b1 07 	call	0xf62	; 0xf62 <fputc>
     aa4:	21 10       	cpse	r2, r1
     aa6:	2a 94       	dec	r2
     aa8:	21 e0       	ldi	r18, 0x01	; 1
     aaa:	82 1a       	sub	r8, r18
     aac:	91 08       	sbc	r9, r1
     aae:	81 14       	cp	r8, r1
     ab0:	91 04       	cpc	r9, r1
     ab2:	71 f7       	brne	.-36     	; 0xa90 <vfprintf+0x1a4>
     ab4:	e8 c0       	rjmp	.+464    	; 0xc86 <vfprintf+0x39a>
     ab6:	84 36       	cpi	r24, 0x64	; 100
     ab8:	11 f0       	breq	.+4      	; 0xabe <vfprintf+0x1d2>
     aba:	89 36       	cpi	r24, 0x69	; 105
     abc:	41 f5       	brne	.+80     	; 0xb0e <vfprintf+0x222>
     abe:	f8 01       	movw	r30, r16
     ac0:	37 fe       	sbrs	r3, 7
     ac2:	07 c0       	rjmp	.+14     	; 0xad2 <vfprintf+0x1e6>
     ac4:	60 81       	ld	r22, Z
     ac6:	71 81       	ldd	r23, Z+1	; 0x01
     ac8:	82 81       	ldd	r24, Z+2	; 0x02
     aca:	93 81       	ldd	r25, Z+3	; 0x03
     acc:	0c 5f       	subi	r16, 0xFC	; 252
     ace:	1f 4f       	sbci	r17, 0xFF	; 255
     ad0:	08 c0       	rjmp	.+16     	; 0xae2 <vfprintf+0x1f6>
     ad2:	60 81       	ld	r22, Z
     ad4:	71 81       	ldd	r23, Z+1	; 0x01
     ad6:	07 2e       	mov	r0, r23
     ad8:	00 0c       	add	r0, r0
     ada:	88 0b       	sbc	r24, r24
     adc:	99 0b       	sbc	r25, r25
     ade:	0e 5f       	subi	r16, 0xFE	; 254
     ae0:	1f 4f       	sbci	r17, 0xFF	; 255
     ae2:	f3 2d       	mov	r31, r3
     ae4:	ff 76       	andi	r31, 0x6F	; 111
     ae6:	3f 2e       	mov	r3, r31
     ae8:	97 ff       	sbrs	r25, 7
     aea:	09 c0       	rjmp	.+18     	; 0xafe <vfprintf+0x212>
     aec:	90 95       	com	r25
     aee:	80 95       	com	r24
     af0:	70 95       	com	r23
     af2:	61 95       	neg	r22
     af4:	7f 4f       	sbci	r23, 0xFF	; 255
     af6:	8f 4f       	sbci	r24, 0xFF	; 255
     af8:	9f 4f       	sbci	r25, 0xFF	; 255
     afa:	f0 68       	ori	r31, 0x80	; 128
     afc:	3f 2e       	mov	r3, r31
     afe:	2a e0       	ldi	r18, 0x0A	; 10
     b00:	30 e0       	ldi	r19, 0x00	; 0
     b02:	a3 01       	movw	r20, r6
     b04:	0e 94 ed 07 	call	0xfda	; 0xfda <__ultoa_invert>
     b08:	88 2e       	mov	r8, r24
     b0a:	86 18       	sub	r8, r6
     b0c:	45 c0       	rjmp	.+138    	; 0xb98 <vfprintf+0x2ac>
     b0e:	85 37       	cpi	r24, 0x75	; 117
     b10:	31 f4       	brne	.+12     	; 0xb1e <vfprintf+0x232>
     b12:	23 2d       	mov	r18, r3
     b14:	2f 7e       	andi	r18, 0xEF	; 239
     b16:	b2 2e       	mov	r11, r18
     b18:	2a e0       	ldi	r18, 0x0A	; 10
     b1a:	30 e0       	ldi	r19, 0x00	; 0
     b1c:	25 c0       	rjmp	.+74     	; 0xb68 <vfprintf+0x27c>
     b1e:	93 2d       	mov	r25, r3
     b20:	99 7f       	andi	r25, 0xF9	; 249
     b22:	b9 2e       	mov	r11, r25
     b24:	8f 36       	cpi	r24, 0x6F	; 111
     b26:	c1 f0       	breq	.+48     	; 0xb58 <vfprintf+0x26c>
     b28:	18 f4       	brcc	.+6      	; 0xb30 <vfprintf+0x244>
     b2a:	88 35       	cpi	r24, 0x58	; 88
     b2c:	79 f0       	breq	.+30     	; 0xb4c <vfprintf+0x260>
     b2e:	b5 c0       	rjmp	.+362    	; 0xc9a <vfprintf+0x3ae>
     b30:	80 37       	cpi	r24, 0x70	; 112
     b32:	19 f0       	breq	.+6      	; 0xb3a <vfprintf+0x24e>
     b34:	88 37       	cpi	r24, 0x78	; 120
     b36:	21 f0       	breq	.+8      	; 0xb40 <vfprintf+0x254>
     b38:	b0 c0       	rjmp	.+352    	; 0xc9a <vfprintf+0x3ae>
     b3a:	e9 2f       	mov	r30, r25
     b3c:	e0 61       	ori	r30, 0x10	; 16
     b3e:	be 2e       	mov	r11, r30
     b40:	b4 fe       	sbrs	r11, 4
     b42:	0d c0       	rjmp	.+26     	; 0xb5e <vfprintf+0x272>
     b44:	fb 2d       	mov	r31, r11
     b46:	f4 60       	ori	r31, 0x04	; 4
     b48:	bf 2e       	mov	r11, r31
     b4a:	09 c0       	rjmp	.+18     	; 0xb5e <vfprintf+0x272>
     b4c:	34 fe       	sbrs	r3, 4
     b4e:	0a c0       	rjmp	.+20     	; 0xb64 <vfprintf+0x278>
     b50:	29 2f       	mov	r18, r25
     b52:	26 60       	ori	r18, 0x06	; 6
     b54:	b2 2e       	mov	r11, r18
     b56:	06 c0       	rjmp	.+12     	; 0xb64 <vfprintf+0x278>
     b58:	28 e0       	ldi	r18, 0x08	; 8
     b5a:	30 e0       	ldi	r19, 0x00	; 0
     b5c:	05 c0       	rjmp	.+10     	; 0xb68 <vfprintf+0x27c>
     b5e:	20 e1       	ldi	r18, 0x10	; 16
     b60:	30 e0       	ldi	r19, 0x00	; 0
     b62:	02 c0       	rjmp	.+4      	; 0xb68 <vfprintf+0x27c>
     b64:	20 e1       	ldi	r18, 0x10	; 16
     b66:	32 e0       	ldi	r19, 0x02	; 2
     b68:	f8 01       	movw	r30, r16
     b6a:	b7 fe       	sbrs	r11, 7
     b6c:	07 c0       	rjmp	.+14     	; 0xb7c <vfprintf+0x290>
     b6e:	60 81       	ld	r22, Z
     b70:	71 81       	ldd	r23, Z+1	; 0x01
     b72:	82 81       	ldd	r24, Z+2	; 0x02
     b74:	93 81       	ldd	r25, Z+3	; 0x03
     b76:	0c 5f       	subi	r16, 0xFC	; 252
     b78:	1f 4f       	sbci	r17, 0xFF	; 255
     b7a:	06 c0       	rjmp	.+12     	; 0xb88 <vfprintf+0x29c>
     b7c:	60 81       	ld	r22, Z
     b7e:	71 81       	ldd	r23, Z+1	; 0x01
     b80:	80 e0       	ldi	r24, 0x00	; 0
     b82:	90 e0       	ldi	r25, 0x00	; 0
     b84:	0e 5f       	subi	r16, 0xFE	; 254
     b86:	1f 4f       	sbci	r17, 0xFF	; 255
     b88:	a3 01       	movw	r20, r6
     b8a:	0e 94 ed 07 	call	0xfda	; 0xfda <__ultoa_invert>
     b8e:	88 2e       	mov	r8, r24
     b90:	86 18       	sub	r8, r6
     b92:	fb 2d       	mov	r31, r11
     b94:	ff 77       	andi	r31, 0x7F	; 127
     b96:	3f 2e       	mov	r3, r31
     b98:	36 fe       	sbrs	r3, 6
     b9a:	0d c0       	rjmp	.+26     	; 0xbb6 <vfprintf+0x2ca>
     b9c:	23 2d       	mov	r18, r3
     b9e:	2e 7f       	andi	r18, 0xFE	; 254
     ba0:	a2 2e       	mov	r10, r18
     ba2:	89 14       	cp	r8, r9
     ba4:	58 f4       	brcc	.+22     	; 0xbbc <vfprintf+0x2d0>
     ba6:	34 fe       	sbrs	r3, 4
     ba8:	0b c0       	rjmp	.+22     	; 0xbc0 <vfprintf+0x2d4>
     baa:	32 fc       	sbrc	r3, 2
     bac:	09 c0       	rjmp	.+18     	; 0xbc0 <vfprintf+0x2d4>
     bae:	83 2d       	mov	r24, r3
     bb0:	8e 7e       	andi	r24, 0xEE	; 238
     bb2:	a8 2e       	mov	r10, r24
     bb4:	05 c0       	rjmp	.+10     	; 0xbc0 <vfprintf+0x2d4>
     bb6:	b8 2c       	mov	r11, r8
     bb8:	a3 2c       	mov	r10, r3
     bba:	03 c0       	rjmp	.+6      	; 0xbc2 <vfprintf+0x2d6>
     bbc:	b8 2c       	mov	r11, r8
     bbe:	01 c0       	rjmp	.+2      	; 0xbc2 <vfprintf+0x2d6>
     bc0:	b9 2c       	mov	r11, r9
     bc2:	a4 fe       	sbrs	r10, 4
     bc4:	0f c0       	rjmp	.+30     	; 0xbe4 <vfprintf+0x2f8>
     bc6:	fe 01       	movw	r30, r28
     bc8:	e8 0d       	add	r30, r8
     bca:	f1 1d       	adc	r31, r1
     bcc:	80 81       	ld	r24, Z
     bce:	80 33       	cpi	r24, 0x30	; 48
     bd0:	21 f4       	brne	.+8      	; 0xbda <vfprintf+0x2ee>
     bd2:	9a 2d       	mov	r25, r10
     bd4:	99 7e       	andi	r25, 0xE9	; 233
     bd6:	a9 2e       	mov	r10, r25
     bd8:	09 c0       	rjmp	.+18     	; 0xbec <vfprintf+0x300>
     bda:	a2 fe       	sbrs	r10, 2
     bdc:	06 c0       	rjmp	.+12     	; 0xbea <vfprintf+0x2fe>
     bde:	b3 94       	inc	r11
     be0:	b3 94       	inc	r11
     be2:	04 c0       	rjmp	.+8      	; 0xbec <vfprintf+0x300>
     be4:	8a 2d       	mov	r24, r10
     be6:	86 78       	andi	r24, 0x86	; 134
     be8:	09 f0       	breq	.+2      	; 0xbec <vfprintf+0x300>
     bea:	b3 94       	inc	r11
     bec:	a3 fc       	sbrc	r10, 3
     bee:	11 c0       	rjmp	.+34     	; 0xc12 <vfprintf+0x326>
     bf0:	a0 fe       	sbrs	r10, 0
     bf2:	06 c0       	rjmp	.+12     	; 0xc00 <vfprintf+0x314>
     bf4:	b2 14       	cp	r11, r2
     bf6:	88 f4       	brcc	.+34     	; 0xc1a <vfprintf+0x32e>
     bf8:	28 0c       	add	r2, r8
     bfa:	92 2c       	mov	r9, r2
     bfc:	9b 18       	sub	r9, r11
     bfe:	0e c0       	rjmp	.+28     	; 0xc1c <vfprintf+0x330>
     c00:	b2 14       	cp	r11, r2
     c02:	60 f4       	brcc	.+24     	; 0xc1c <vfprintf+0x330>
     c04:	b6 01       	movw	r22, r12
     c06:	80 e2       	ldi	r24, 0x20	; 32
     c08:	90 e0       	ldi	r25, 0x00	; 0
     c0a:	0e 94 b1 07 	call	0xf62	; 0xf62 <fputc>
     c0e:	b3 94       	inc	r11
     c10:	f7 cf       	rjmp	.-18     	; 0xc00 <vfprintf+0x314>
     c12:	b2 14       	cp	r11, r2
     c14:	18 f4       	brcc	.+6      	; 0xc1c <vfprintf+0x330>
     c16:	2b 18       	sub	r2, r11
     c18:	02 c0       	rjmp	.+4      	; 0xc1e <vfprintf+0x332>
     c1a:	98 2c       	mov	r9, r8
     c1c:	21 2c       	mov	r2, r1
     c1e:	a4 fe       	sbrs	r10, 4
     c20:	10 c0       	rjmp	.+32     	; 0xc42 <vfprintf+0x356>
     c22:	b6 01       	movw	r22, r12
     c24:	80 e3       	ldi	r24, 0x30	; 48
     c26:	90 e0       	ldi	r25, 0x00	; 0
     c28:	0e 94 b1 07 	call	0xf62	; 0xf62 <fputc>
     c2c:	a2 fe       	sbrs	r10, 2
     c2e:	17 c0       	rjmp	.+46     	; 0xc5e <vfprintf+0x372>
     c30:	a1 fc       	sbrc	r10, 1
     c32:	03 c0       	rjmp	.+6      	; 0xc3a <vfprintf+0x34e>
     c34:	88 e7       	ldi	r24, 0x78	; 120
     c36:	90 e0       	ldi	r25, 0x00	; 0
     c38:	02 c0       	rjmp	.+4      	; 0xc3e <vfprintf+0x352>
     c3a:	88 e5       	ldi	r24, 0x58	; 88
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	b6 01       	movw	r22, r12
     c40:	0c c0       	rjmp	.+24     	; 0xc5a <vfprintf+0x36e>
     c42:	8a 2d       	mov	r24, r10
     c44:	86 78       	andi	r24, 0x86	; 134
     c46:	59 f0       	breq	.+22     	; 0xc5e <vfprintf+0x372>
     c48:	a1 fe       	sbrs	r10, 1
     c4a:	02 c0       	rjmp	.+4      	; 0xc50 <vfprintf+0x364>
     c4c:	8b e2       	ldi	r24, 0x2B	; 43
     c4e:	01 c0       	rjmp	.+2      	; 0xc52 <vfprintf+0x366>
     c50:	80 e2       	ldi	r24, 0x20	; 32
     c52:	a7 fc       	sbrc	r10, 7
     c54:	8d e2       	ldi	r24, 0x2D	; 45
     c56:	b6 01       	movw	r22, r12
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	0e 94 b1 07 	call	0xf62	; 0xf62 <fputc>
     c5e:	89 14       	cp	r8, r9
     c60:	38 f4       	brcc	.+14     	; 0xc70 <vfprintf+0x384>
     c62:	b6 01       	movw	r22, r12
     c64:	80 e3       	ldi	r24, 0x30	; 48
     c66:	90 e0       	ldi	r25, 0x00	; 0
     c68:	0e 94 b1 07 	call	0xf62	; 0xf62 <fputc>
     c6c:	9a 94       	dec	r9
     c6e:	f7 cf       	rjmp	.-18     	; 0xc5e <vfprintf+0x372>
     c70:	8a 94       	dec	r8
     c72:	f3 01       	movw	r30, r6
     c74:	e8 0d       	add	r30, r8
     c76:	f1 1d       	adc	r31, r1
     c78:	80 81       	ld	r24, Z
     c7a:	b6 01       	movw	r22, r12
     c7c:	90 e0       	ldi	r25, 0x00	; 0
     c7e:	0e 94 b1 07 	call	0xf62	; 0xf62 <fputc>
     c82:	81 10       	cpse	r8, r1
     c84:	f5 cf       	rjmp	.-22     	; 0xc70 <vfprintf+0x384>
     c86:	22 20       	and	r2, r2
     c88:	09 f4       	brne	.+2      	; 0xc8c <vfprintf+0x3a0>
     c8a:	42 ce       	rjmp	.-892    	; 0x910 <vfprintf+0x24>
     c8c:	b6 01       	movw	r22, r12
     c8e:	80 e2       	ldi	r24, 0x20	; 32
     c90:	90 e0       	ldi	r25, 0x00	; 0
     c92:	0e 94 b1 07 	call	0xf62	; 0xf62 <fputc>
     c96:	2a 94       	dec	r2
     c98:	f6 cf       	rjmp	.-20     	; 0xc86 <vfprintf+0x39a>
     c9a:	f6 01       	movw	r30, r12
     c9c:	86 81       	ldd	r24, Z+6	; 0x06
     c9e:	97 81       	ldd	r25, Z+7	; 0x07
     ca0:	02 c0       	rjmp	.+4      	; 0xca6 <vfprintf+0x3ba>
     ca2:	8f ef       	ldi	r24, 0xFF	; 255
     ca4:	9f ef       	ldi	r25, 0xFF	; 255
     ca6:	2b 96       	adiw	r28, 0x0b	; 11
     ca8:	e2 e1       	ldi	r30, 0x12	; 18
     caa:	0c 94 67 08 	jmp	0x10ce	; 0x10ce <__epilogue_restores__>

00000cae <calloc>:
     cae:	0f 93       	push	r16
     cb0:	1f 93       	push	r17
     cb2:	cf 93       	push	r28
     cb4:	df 93       	push	r29
     cb6:	86 9f       	mul	r24, r22
     cb8:	80 01       	movw	r16, r0
     cba:	87 9f       	mul	r24, r23
     cbc:	10 0d       	add	r17, r0
     cbe:	96 9f       	mul	r25, r22
     cc0:	10 0d       	add	r17, r0
     cc2:	11 24       	eor	r1, r1
     cc4:	c8 01       	movw	r24, r16
     cc6:	0e 94 73 06 	call	0xce6	; 0xce6 <malloc>
     cca:	ec 01       	movw	r28, r24
     ccc:	00 97       	sbiw	r24, 0x00	; 0
     cce:	29 f0       	breq	.+10     	; 0xcda <calloc+0x2c>
     cd0:	a8 01       	movw	r20, r16
     cd2:	60 e0       	ldi	r22, 0x00	; 0
     cd4:	70 e0       	ldi	r23, 0x00	; 0
     cd6:	0e 94 9f 07 	call	0xf3e	; 0xf3e <memset>
     cda:	ce 01       	movw	r24, r28
     cdc:	df 91       	pop	r29
     cde:	cf 91       	pop	r28
     ce0:	1f 91       	pop	r17
     ce2:	0f 91       	pop	r16
     ce4:	08 95       	ret

00000ce6 <malloc>:
     ce6:	0f 93       	push	r16
     ce8:	1f 93       	push	r17
     cea:	cf 93       	push	r28
     cec:	df 93       	push	r29
     cee:	82 30       	cpi	r24, 0x02	; 2
     cf0:	91 05       	cpc	r25, r1
     cf2:	10 f4       	brcc	.+4      	; 0xcf8 <malloc+0x12>
     cf4:	82 e0       	ldi	r24, 0x02	; 2
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	e0 91 5e 01 	lds	r30, 0x015E	; 0x80015e <__flp>
     cfc:	f0 91 5f 01 	lds	r31, 0x015F	; 0x80015f <__flp+0x1>
     d00:	20 e0       	ldi	r18, 0x00	; 0
     d02:	30 e0       	ldi	r19, 0x00	; 0
     d04:	a0 e0       	ldi	r26, 0x00	; 0
     d06:	b0 e0       	ldi	r27, 0x00	; 0
     d08:	30 97       	sbiw	r30, 0x00	; 0
     d0a:	19 f1       	breq	.+70     	; 0xd52 <malloc+0x6c>
     d0c:	40 81       	ld	r20, Z
     d0e:	51 81       	ldd	r21, Z+1	; 0x01
     d10:	02 81       	ldd	r16, Z+2	; 0x02
     d12:	13 81       	ldd	r17, Z+3	; 0x03
     d14:	48 17       	cp	r20, r24
     d16:	59 07       	cpc	r21, r25
     d18:	c8 f0       	brcs	.+50     	; 0xd4c <malloc+0x66>
     d1a:	84 17       	cp	r24, r20
     d1c:	95 07       	cpc	r25, r21
     d1e:	69 f4       	brne	.+26     	; 0xd3a <malloc+0x54>
     d20:	10 97       	sbiw	r26, 0x00	; 0
     d22:	31 f0       	breq	.+12     	; 0xd30 <malloc+0x4a>
     d24:	12 96       	adiw	r26, 0x02	; 2
     d26:	0c 93       	st	X, r16
     d28:	12 97       	sbiw	r26, 0x02	; 2
     d2a:	13 96       	adiw	r26, 0x03	; 3
     d2c:	1c 93       	st	X, r17
     d2e:	27 c0       	rjmp	.+78     	; 0xd7e <malloc+0x98>
     d30:	00 93 5e 01 	sts	0x015E, r16	; 0x80015e <__flp>
     d34:	10 93 5f 01 	sts	0x015F, r17	; 0x80015f <__flp+0x1>
     d38:	22 c0       	rjmp	.+68     	; 0xd7e <malloc+0x98>
     d3a:	21 15       	cp	r18, r1
     d3c:	31 05       	cpc	r19, r1
     d3e:	19 f0       	breq	.+6      	; 0xd46 <malloc+0x60>
     d40:	42 17       	cp	r20, r18
     d42:	53 07       	cpc	r21, r19
     d44:	18 f4       	brcc	.+6      	; 0xd4c <malloc+0x66>
     d46:	9a 01       	movw	r18, r20
     d48:	bd 01       	movw	r22, r26
     d4a:	ef 01       	movw	r28, r30
     d4c:	df 01       	movw	r26, r30
     d4e:	f8 01       	movw	r30, r16
     d50:	db cf       	rjmp	.-74     	; 0xd08 <malloc+0x22>
     d52:	21 15       	cp	r18, r1
     d54:	31 05       	cpc	r19, r1
     d56:	f9 f0       	breq	.+62     	; 0xd96 <malloc+0xb0>
     d58:	28 1b       	sub	r18, r24
     d5a:	39 0b       	sbc	r19, r25
     d5c:	24 30       	cpi	r18, 0x04	; 4
     d5e:	31 05       	cpc	r19, r1
     d60:	80 f4       	brcc	.+32     	; 0xd82 <malloc+0x9c>
     d62:	8a 81       	ldd	r24, Y+2	; 0x02
     d64:	9b 81       	ldd	r25, Y+3	; 0x03
     d66:	61 15       	cp	r22, r1
     d68:	71 05       	cpc	r23, r1
     d6a:	21 f0       	breq	.+8      	; 0xd74 <malloc+0x8e>
     d6c:	fb 01       	movw	r30, r22
     d6e:	93 83       	std	Z+3, r25	; 0x03
     d70:	82 83       	std	Z+2, r24	; 0x02
     d72:	04 c0       	rjmp	.+8      	; 0xd7c <malloc+0x96>
     d74:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <__flp+0x1>
     d78:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <__flp>
     d7c:	fe 01       	movw	r30, r28
     d7e:	32 96       	adiw	r30, 0x02	; 2
     d80:	44 c0       	rjmp	.+136    	; 0xe0a <malloc+0x124>
     d82:	fe 01       	movw	r30, r28
     d84:	e2 0f       	add	r30, r18
     d86:	f3 1f       	adc	r31, r19
     d88:	81 93       	st	Z+, r24
     d8a:	91 93       	st	Z+, r25
     d8c:	22 50       	subi	r18, 0x02	; 2
     d8e:	31 09       	sbc	r19, r1
     d90:	39 83       	std	Y+1, r19	; 0x01
     d92:	28 83       	st	Y, r18
     d94:	3a c0       	rjmp	.+116    	; 0xe0a <malloc+0x124>
     d96:	20 91 5c 01 	lds	r18, 0x015C	; 0x80015c <__brkval>
     d9a:	30 91 5d 01 	lds	r19, 0x015D	; 0x80015d <__brkval+0x1>
     d9e:	23 2b       	or	r18, r19
     da0:	41 f4       	brne	.+16     	; 0xdb2 <malloc+0xcc>
     da2:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     da6:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     daa:	30 93 5d 01 	sts	0x015D, r19	; 0x80015d <__brkval+0x1>
     dae:	20 93 5c 01 	sts	0x015C, r18	; 0x80015c <__brkval>
     db2:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     db6:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     dba:	21 15       	cp	r18, r1
     dbc:	31 05       	cpc	r19, r1
     dbe:	41 f4       	brne	.+16     	; 0xdd0 <malloc+0xea>
     dc0:	2d b7       	in	r18, 0x3d	; 61
     dc2:	3e b7       	in	r19, 0x3e	; 62
     dc4:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     dc8:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     dcc:	24 1b       	sub	r18, r20
     dce:	35 0b       	sbc	r19, r21
     dd0:	e0 91 5c 01 	lds	r30, 0x015C	; 0x80015c <__brkval>
     dd4:	f0 91 5d 01 	lds	r31, 0x015D	; 0x80015d <__brkval+0x1>
     dd8:	e2 17       	cp	r30, r18
     dda:	f3 07       	cpc	r31, r19
     ddc:	a0 f4       	brcc	.+40     	; 0xe06 <malloc+0x120>
     dde:	2e 1b       	sub	r18, r30
     de0:	3f 0b       	sbc	r19, r31
     de2:	28 17       	cp	r18, r24
     de4:	39 07       	cpc	r19, r25
     de6:	78 f0       	brcs	.+30     	; 0xe06 <malloc+0x120>
     de8:	ac 01       	movw	r20, r24
     dea:	4e 5f       	subi	r20, 0xFE	; 254
     dec:	5f 4f       	sbci	r21, 0xFF	; 255
     dee:	24 17       	cp	r18, r20
     df0:	35 07       	cpc	r19, r21
     df2:	48 f0       	brcs	.+18     	; 0xe06 <malloc+0x120>
     df4:	4e 0f       	add	r20, r30
     df6:	5f 1f       	adc	r21, r31
     df8:	50 93 5d 01 	sts	0x015D, r21	; 0x80015d <__brkval+0x1>
     dfc:	40 93 5c 01 	sts	0x015C, r20	; 0x80015c <__brkval>
     e00:	81 93       	st	Z+, r24
     e02:	91 93       	st	Z+, r25
     e04:	02 c0       	rjmp	.+4      	; 0xe0a <malloc+0x124>
     e06:	e0 e0       	ldi	r30, 0x00	; 0
     e08:	f0 e0       	ldi	r31, 0x00	; 0
     e0a:	cf 01       	movw	r24, r30
     e0c:	df 91       	pop	r29
     e0e:	cf 91       	pop	r28
     e10:	1f 91       	pop	r17
     e12:	0f 91       	pop	r16
     e14:	08 95       	ret

00000e16 <free>:
     e16:	cf 93       	push	r28
     e18:	df 93       	push	r29
     e1a:	00 97       	sbiw	r24, 0x00	; 0
     e1c:	09 f4       	brne	.+2      	; 0xe20 <free+0xa>
     e1e:	81 c0       	rjmp	.+258    	; 0xf22 <free+0x10c>
     e20:	fc 01       	movw	r30, r24
     e22:	32 97       	sbiw	r30, 0x02	; 2
     e24:	13 82       	std	Z+3, r1	; 0x03
     e26:	12 82       	std	Z+2, r1	; 0x02
     e28:	a0 91 5e 01 	lds	r26, 0x015E	; 0x80015e <__flp>
     e2c:	b0 91 5f 01 	lds	r27, 0x015F	; 0x80015f <__flp+0x1>
     e30:	10 97       	sbiw	r26, 0x00	; 0
     e32:	81 f4       	brne	.+32     	; 0xe54 <free+0x3e>
     e34:	20 81       	ld	r18, Z
     e36:	31 81       	ldd	r19, Z+1	; 0x01
     e38:	82 0f       	add	r24, r18
     e3a:	93 1f       	adc	r25, r19
     e3c:	20 91 5c 01 	lds	r18, 0x015C	; 0x80015c <__brkval>
     e40:	30 91 5d 01 	lds	r19, 0x015D	; 0x80015d <__brkval+0x1>
     e44:	28 17       	cp	r18, r24
     e46:	39 07       	cpc	r19, r25
     e48:	51 f5       	brne	.+84     	; 0xe9e <free+0x88>
     e4a:	f0 93 5d 01 	sts	0x015D, r31	; 0x80015d <__brkval+0x1>
     e4e:	e0 93 5c 01 	sts	0x015C, r30	; 0x80015c <__brkval>
     e52:	67 c0       	rjmp	.+206    	; 0xf22 <free+0x10c>
     e54:	ed 01       	movw	r28, r26
     e56:	20 e0       	ldi	r18, 0x00	; 0
     e58:	30 e0       	ldi	r19, 0x00	; 0
     e5a:	ce 17       	cp	r28, r30
     e5c:	df 07       	cpc	r29, r31
     e5e:	40 f4       	brcc	.+16     	; 0xe70 <free+0x5a>
     e60:	4a 81       	ldd	r20, Y+2	; 0x02
     e62:	5b 81       	ldd	r21, Y+3	; 0x03
     e64:	9e 01       	movw	r18, r28
     e66:	41 15       	cp	r20, r1
     e68:	51 05       	cpc	r21, r1
     e6a:	f1 f0       	breq	.+60     	; 0xea8 <free+0x92>
     e6c:	ea 01       	movw	r28, r20
     e6e:	f5 cf       	rjmp	.-22     	; 0xe5a <free+0x44>
     e70:	d3 83       	std	Z+3, r29	; 0x03
     e72:	c2 83       	std	Z+2, r28	; 0x02
     e74:	40 81       	ld	r20, Z
     e76:	51 81       	ldd	r21, Z+1	; 0x01
     e78:	84 0f       	add	r24, r20
     e7a:	95 1f       	adc	r25, r21
     e7c:	c8 17       	cp	r28, r24
     e7e:	d9 07       	cpc	r29, r25
     e80:	59 f4       	brne	.+22     	; 0xe98 <free+0x82>
     e82:	88 81       	ld	r24, Y
     e84:	99 81       	ldd	r25, Y+1	; 0x01
     e86:	84 0f       	add	r24, r20
     e88:	95 1f       	adc	r25, r21
     e8a:	02 96       	adiw	r24, 0x02	; 2
     e8c:	91 83       	std	Z+1, r25	; 0x01
     e8e:	80 83       	st	Z, r24
     e90:	8a 81       	ldd	r24, Y+2	; 0x02
     e92:	9b 81       	ldd	r25, Y+3	; 0x03
     e94:	93 83       	std	Z+3, r25	; 0x03
     e96:	82 83       	std	Z+2, r24	; 0x02
     e98:	21 15       	cp	r18, r1
     e9a:	31 05       	cpc	r19, r1
     e9c:	29 f4       	brne	.+10     	; 0xea8 <free+0x92>
     e9e:	f0 93 5f 01 	sts	0x015F, r31	; 0x80015f <__flp+0x1>
     ea2:	e0 93 5e 01 	sts	0x015E, r30	; 0x80015e <__flp>
     ea6:	3d c0       	rjmp	.+122    	; 0xf22 <free+0x10c>
     ea8:	e9 01       	movw	r28, r18
     eaa:	fb 83       	std	Y+3, r31	; 0x03
     eac:	ea 83       	std	Y+2, r30	; 0x02
     eae:	49 91       	ld	r20, Y+
     eb0:	59 91       	ld	r21, Y+
     eb2:	c4 0f       	add	r28, r20
     eb4:	d5 1f       	adc	r29, r21
     eb6:	ec 17       	cp	r30, r28
     eb8:	fd 07       	cpc	r31, r29
     eba:	61 f4       	brne	.+24     	; 0xed4 <free+0xbe>
     ebc:	80 81       	ld	r24, Z
     ebe:	91 81       	ldd	r25, Z+1	; 0x01
     ec0:	84 0f       	add	r24, r20
     ec2:	95 1f       	adc	r25, r21
     ec4:	02 96       	adiw	r24, 0x02	; 2
     ec6:	e9 01       	movw	r28, r18
     ec8:	99 83       	std	Y+1, r25	; 0x01
     eca:	88 83       	st	Y, r24
     ecc:	82 81       	ldd	r24, Z+2	; 0x02
     ece:	93 81       	ldd	r25, Z+3	; 0x03
     ed0:	9b 83       	std	Y+3, r25	; 0x03
     ed2:	8a 83       	std	Y+2, r24	; 0x02
     ed4:	e0 e0       	ldi	r30, 0x00	; 0
     ed6:	f0 e0       	ldi	r31, 0x00	; 0
     ed8:	12 96       	adiw	r26, 0x02	; 2
     eda:	8d 91       	ld	r24, X+
     edc:	9c 91       	ld	r25, X
     ede:	13 97       	sbiw	r26, 0x03	; 3
     ee0:	00 97       	sbiw	r24, 0x00	; 0
     ee2:	19 f0       	breq	.+6      	; 0xeea <free+0xd4>
     ee4:	fd 01       	movw	r30, r26
     ee6:	dc 01       	movw	r26, r24
     ee8:	f7 cf       	rjmp	.-18     	; 0xed8 <free+0xc2>
     eea:	8d 91       	ld	r24, X+
     eec:	9c 91       	ld	r25, X
     eee:	11 97       	sbiw	r26, 0x01	; 1
     ef0:	9d 01       	movw	r18, r26
     ef2:	2e 5f       	subi	r18, 0xFE	; 254
     ef4:	3f 4f       	sbci	r19, 0xFF	; 255
     ef6:	82 0f       	add	r24, r18
     ef8:	93 1f       	adc	r25, r19
     efa:	20 91 5c 01 	lds	r18, 0x015C	; 0x80015c <__brkval>
     efe:	30 91 5d 01 	lds	r19, 0x015D	; 0x80015d <__brkval+0x1>
     f02:	28 17       	cp	r18, r24
     f04:	39 07       	cpc	r19, r25
     f06:	69 f4       	brne	.+26     	; 0xf22 <free+0x10c>
     f08:	30 97       	sbiw	r30, 0x00	; 0
     f0a:	29 f4       	brne	.+10     	; 0xf16 <free+0x100>
     f0c:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <__flp+0x1>
     f10:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <__flp>
     f14:	02 c0       	rjmp	.+4      	; 0xf1a <free+0x104>
     f16:	13 82       	std	Z+3, r1	; 0x03
     f18:	12 82       	std	Z+2, r1	; 0x02
     f1a:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <__brkval+0x1>
     f1e:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <__brkval>
     f22:	df 91       	pop	r29
     f24:	cf 91       	pop	r28
     f26:	08 95       	ret

00000f28 <strnlen_P>:
     f28:	fc 01       	movw	r30, r24
     f2a:	05 90       	lpm	r0, Z+
     f2c:	61 50       	subi	r22, 0x01	; 1
     f2e:	70 40       	sbci	r23, 0x00	; 0
     f30:	01 10       	cpse	r0, r1
     f32:	d8 f7       	brcc	.-10     	; 0xf2a <strnlen_P+0x2>
     f34:	80 95       	com	r24
     f36:	90 95       	com	r25
     f38:	8e 0f       	add	r24, r30
     f3a:	9f 1f       	adc	r25, r31
     f3c:	08 95       	ret

00000f3e <memset>:
     f3e:	dc 01       	movw	r26, r24
     f40:	01 c0       	rjmp	.+2      	; 0xf44 <memset+0x6>
     f42:	6d 93       	st	X+, r22
     f44:	41 50       	subi	r20, 0x01	; 1
     f46:	50 40       	sbci	r21, 0x00	; 0
     f48:	e0 f7       	brcc	.-8      	; 0xf42 <memset+0x4>
     f4a:	08 95       	ret

00000f4c <strnlen>:
     f4c:	fc 01       	movw	r30, r24
     f4e:	61 50       	subi	r22, 0x01	; 1
     f50:	70 40       	sbci	r23, 0x00	; 0
     f52:	01 90       	ld	r0, Z+
     f54:	01 10       	cpse	r0, r1
     f56:	d8 f7       	brcc	.-10     	; 0xf4e <strnlen+0x2>
     f58:	80 95       	com	r24
     f5a:	90 95       	com	r25
     f5c:	8e 0f       	add	r24, r30
     f5e:	9f 1f       	adc	r25, r31
     f60:	08 95       	ret

00000f62 <fputc>:
     f62:	0f 93       	push	r16
     f64:	1f 93       	push	r17
     f66:	cf 93       	push	r28
     f68:	df 93       	push	r29
     f6a:	fb 01       	movw	r30, r22
     f6c:	23 81       	ldd	r18, Z+3	; 0x03
     f6e:	21 fd       	sbrc	r18, 1
     f70:	03 c0       	rjmp	.+6      	; 0xf78 <fputc+0x16>
     f72:	8f ef       	ldi	r24, 0xFF	; 255
     f74:	9f ef       	ldi	r25, 0xFF	; 255
     f76:	2c c0       	rjmp	.+88     	; 0xfd0 <fputc+0x6e>
     f78:	22 ff       	sbrs	r18, 2
     f7a:	16 c0       	rjmp	.+44     	; 0xfa8 <fputc+0x46>
     f7c:	46 81       	ldd	r20, Z+6	; 0x06
     f7e:	57 81       	ldd	r21, Z+7	; 0x07
     f80:	24 81       	ldd	r18, Z+4	; 0x04
     f82:	35 81       	ldd	r19, Z+5	; 0x05
     f84:	42 17       	cp	r20, r18
     f86:	53 07       	cpc	r21, r19
     f88:	44 f4       	brge	.+16     	; 0xf9a <fputc+0x38>
     f8a:	a0 81       	ld	r26, Z
     f8c:	b1 81       	ldd	r27, Z+1	; 0x01
     f8e:	9d 01       	movw	r18, r26
     f90:	2f 5f       	subi	r18, 0xFF	; 255
     f92:	3f 4f       	sbci	r19, 0xFF	; 255
     f94:	31 83       	std	Z+1, r19	; 0x01
     f96:	20 83       	st	Z, r18
     f98:	8c 93       	st	X, r24
     f9a:	26 81       	ldd	r18, Z+6	; 0x06
     f9c:	37 81       	ldd	r19, Z+7	; 0x07
     f9e:	2f 5f       	subi	r18, 0xFF	; 255
     fa0:	3f 4f       	sbci	r19, 0xFF	; 255
     fa2:	37 83       	std	Z+7, r19	; 0x07
     fa4:	26 83       	std	Z+6, r18	; 0x06
     fa6:	14 c0       	rjmp	.+40     	; 0xfd0 <fputc+0x6e>
     fa8:	8b 01       	movw	r16, r22
     faa:	ec 01       	movw	r28, r24
     fac:	fb 01       	movw	r30, r22
     fae:	00 84       	ldd	r0, Z+8	; 0x08
     fb0:	f1 85       	ldd	r31, Z+9	; 0x09
     fb2:	e0 2d       	mov	r30, r0
     fb4:	09 95       	icall
     fb6:	89 2b       	or	r24, r25
     fb8:	e1 f6       	brne	.-72     	; 0xf72 <fputc+0x10>
     fba:	d8 01       	movw	r26, r16
     fbc:	16 96       	adiw	r26, 0x06	; 6
     fbe:	8d 91       	ld	r24, X+
     fc0:	9c 91       	ld	r25, X
     fc2:	17 97       	sbiw	r26, 0x07	; 7
     fc4:	01 96       	adiw	r24, 0x01	; 1
     fc6:	17 96       	adiw	r26, 0x07	; 7
     fc8:	9c 93       	st	X, r25
     fca:	8e 93       	st	-X, r24
     fcc:	16 97       	sbiw	r26, 0x06	; 6
     fce:	ce 01       	movw	r24, r28
     fd0:	df 91       	pop	r29
     fd2:	cf 91       	pop	r28
     fd4:	1f 91       	pop	r17
     fd6:	0f 91       	pop	r16
     fd8:	08 95       	ret

00000fda <__ultoa_invert>:
     fda:	fa 01       	movw	r30, r20
     fdc:	aa 27       	eor	r26, r26
     fde:	28 30       	cpi	r18, 0x08	; 8
     fe0:	51 f1       	breq	.+84     	; 0x1036 <__ultoa_invert+0x5c>
     fe2:	20 31       	cpi	r18, 0x10	; 16
     fe4:	81 f1       	breq	.+96     	; 0x1046 <__ultoa_invert+0x6c>
     fe6:	e8 94       	clt
     fe8:	6f 93       	push	r22
     fea:	6e 7f       	andi	r22, 0xFE	; 254
     fec:	6e 5f       	subi	r22, 0xFE	; 254
     fee:	7f 4f       	sbci	r23, 0xFF	; 255
     ff0:	8f 4f       	sbci	r24, 0xFF	; 255
     ff2:	9f 4f       	sbci	r25, 0xFF	; 255
     ff4:	af 4f       	sbci	r26, 0xFF	; 255
     ff6:	b1 e0       	ldi	r27, 0x01	; 1
     ff8:	3e d0       	rcall	.+124    	; 0x1076 <__ultoa_invert+0x9c>
     ffa:	b4 e0       	ldi	r27, 0x04	; 4
     ffc:	3c d0       	rcall	.+120    	; 0x1076 <__ultoa_invert+0x9c>
     ffe:	67 0f       	add	r22, r23
    1000:	78 1f       	adc	r23, r24
    1002:	89 1f       	adc	r24, r25
    1004:	9a 1f       	adc	r25, r26
    1006:	a1 1d       	adc	r26, r1
    1008:	68 0f       	add	r22, r24
    100a:	79 1f       	adc	r23, r25
    100c:	8a 1f       	adc	r24, r26
    100e:	91 1d       	adc	r25, r1
    1010:	a1 1d       	adc	r26, r1
    1012:	6a 0f       	add	r22, r26
    1014:	71 1d       	adc	r23, r1
    1016:	81 1d       	adc	r24, r1
    1018:	91 1d       	adc	r25, r1
    101a:	a1 1d       	adc	r26, r1
    101c:	20 d0       	rcall	.+64     	; 0x105e <__ultoa_invert+0x84>
    101e:	09 f4       	brne	.+2      	; 0x1022 <__ultoa_invert+0x48>
    1020:	68 94       	set
    1022:	3f 91       	pop	r19
    1024:	2a e0       	ldi	r18, 0x0A	; 10
    1026:	26 9f       	mul	r18, r22
    1028:	11 24       	eor	r1, r1
    102a:	30 19       	sub	r19, r0
    102c:	30 5d       	subi	r19, 0xD0	; 208
    102e:	31 93       	st	Z+, r19
    1030:	de f6       	brtc	.-74     	; 0xfe8 <__ultoa_invert+0xe>
    1032:	cf 01       	movw	r24, r30
    1034:	08 95       	ret
    1036:	46 2f       	mov	r20, r22
    1038:	47 70       	andi	r20, 0x07	; 7
    103a:	40 5d       	subi	r20, 0xD0	; 208
    103c:	41 93       	st	Z+, r20
    103e:	b3 e0       	ldi	r27, 0x03	; 3
    1040:	0f d0       	rcall	.+30     	; 0x1060 <__ultoa_invert+0x86>
    1042:	c9 f7       	brne	.-14     	; 0x1036 <__ultoa_invert+0x5c>
    1044:	f6 cf       	rjmp	.-20     	; 0x1032 <__ultoa_invert+0x58>
    1046:	46 2f       	mov	r20, r22
    1048:	4f 70       	andi	r20, 0x0F	; 15
    104a:	40 5d       	subi	r20, 0xD0	; 208
    104c:	4a 33       	cpi	r20, 0x3A	; 58
    104e:	18 f0       	brcs	.+6      	; 0x1056 <__ultoa_invert+0x7c>
    1050:	49 5d       	subi	r20, 0xD9	; 217
    1052:	31 fd       	sbrc	r19, 1
    1054:	40 52       	subi	r20, 0x20	; 32
    1056:	41 93       	st	Z+, r20
    1058:	02 d0       	rcall	.+4      	; 0x105e <__ultoa_invert+0x84>
    105a:	a9 f7       	brne	.-22     	; 0x1046 <__ultoa_invert+0x6c>
    105c:	ea cf       	rjmp	.-44     	; 0x1032 <__ultoa_invert+0x58>
    105e:	b4 e0       	ldi	r27, 0x04	; 4
    1060:	a6 95       	lsr	r26
    1062:	97 95       	ror	r25
    1064:	87 95       	ror	r24
    1066:	77 95       	ror	r23
    1068:	67 95       	ror	r22
    106a:	ba 95       	dec	r27
    106c:	c9 f7       	brne	.-14     	; 0x1060 <__ultoa_invert+0x86>
    106e:	00 97       	sbiw	r24, 0x00	; 0
    1070:	61 05       	cpc	r22, r1
    1072:	71 05       	cpc	r23, r1
    1074:	08 95       	ret
    1076:	9b 01       	movw	r18, r22
    1078:	ac 01       	movw	r20, r24
    107a:	0a 2e       	mov	r0, r26
    107c:	06 94       	lsr	r0
    107e:	57 95       	ror	r21
    1080:	47 95       	ror	r20
    1082:	37 95       	ror	r19
    1084:	27 95       	ror	r18
    1086:	ba 95       	dec	r27
    1088:	c9 f7       	brne	.-14     	; 0x107c <__ultoa_invert+0xa2>
    108a:	62 0f       	add	r22, r18
    108c:	73 1f       	adc	r23, r19
    108e:	84 1f       	adc	r24, r20
    1090:	95 1f       	adc	r25, r21
    1092:	a0 1d       	adc	r26, r0
    1094:	08 95       	ret

00001096 <__prologue_saves__>:
    1096:	2f 92       	push	r2
    1098:	3f 92       	push	r3
    109a:	4f 92       	push	r4
    109c:	5f 92       	push	r5
    109e:	6f 92       	push	r6
    10a0:	7f 92       	push	r7
    10a2:	8f 92       	push	r8
    10a4:	9f 92       	push	r9
    10a6:	af 92       	push	r10
    10a8:	bf 92       	push	r11
    10aa:	cf 92       	push	r12
    10ac:	df 92       	push	r13
    10ae:	ef 92       	push	r14
    10b0:	ff 92       	push	r15
    10b2:	0f 93       	push	r16
    10b4:	1f 93       	push	r17
    10b6:	cf 93       	push	r28
    10b8:	df 93       	push	r29
    10ba:	cd b7       	in	r28, 0x3d	; 61
    10bc:	de b7       	in	r29, 0x3e	; 62
    10be:	ca 1b       	sub	r28, r26
    10c0:	db 0b       	sbc	r29, r27
    10c2:	0f b6       	in	r0, 0x3f	; 63
    10c4:	f8 94       	cli
    10c6:	de bf       	out	0x3e, r29	; 62
    10c8:	0f be       	out	0x3f, r0	; 63
    10ca:	cd bf       	out	0x3d, r28	; 61
    10cc:	09 94       	ijmp

000010ce <__epilogue_restores__>:
    10ce:	2a 88       	ldd	r2, Y+18	; 0x12
    10d0:	39 88       	ldd	r3, Y+17	; 0x11
    10d2:	48 88       	ldd	r4, Y+16	; 0x10
    10d4:	5f 84       	ldd	r5, Y+15	; 0x0f
    10d6:	6e 84       	ldd	r6, Y+14	; 0x0e
    10d8:	7d 84       	ldd	r7, Y+13	; 0x0d
    10da:	8c 84       	ldd	r8, Y+12	; 0x0c
    10dc:	9b 84       	ldd	r9, Y+11	; 0x0b
    10de:	aa 84       	ldd	r10, Y+10	; 0x0a
    10e0:	b9 84       	ldd	r11, Y+9	; 0x09
    10e2:	c8 84       	ldd	r12, Y+8	; 0x08
    10e4:	df 80       	ldd	r13, Y+7	; 0x07
    10e6:	ee 80       	ldd	r14, Y+6	; 0x06
    10e8:	fd 80       	ldd	r15, Y+5	; 0x05
    10ea:	0c 81       	ldd	r16, Y+4	; 0x04
    10ec:	1b 81       	ldd	r17, Y+3	; 0x03
    10ee:	aa 81       	ldd	r26, Y+2	; 0x02
    10f0:	b9 81       	ldd	r27, Y+1	; 0x01
    10f2:	ce 0f       	add	r28, r30
    10f4:	d1 1d       	adc	r29, r1
    10f6:	0f b6       	in	r0, 0x3f	; 63
    10f8:	f8 94       	cli
    10fa:	de bf       	out	0x3e, r29	; 62
    10fc:	0f be       	out	0x3f, r0	; 63
    10fe:	cd bf       	out	0x3d, r28	; 61
    1100:	ed 01       	movw	r28, r26
    1102:	08 95       	ret

00001104 <_exit>:
    1104:	f8 94       	cli

00001106 <__stop_program>:
    1106:	ff cf       	rjmp	.-2      	; 0x1106 <__stop_program>
